{"version":3,"sources":["services/helpers.js","context/ApplicationContext.js","images/shareIcon.svg","images/blackHeartIcon.svg","images/whiteHeartIcon.svg","images/unavailableVideo.png","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/profileIcon.svg","images/searchIcon.svg","components/HeaderSearchBar.jsx","pages/Login.jsx","components/Footer.jsx","components/Header.js","components/ButtonsMealsSearch.jsx","pages/RecipesMainScreen.jsx","pages/Profile.jsx","components/ButtonsDrinksSearch.jsx","pages/DrinksMainScreen.jsx","pages/ExploreRecipies.jsx","pages/ExploreDrinks.jsx","pages/ExploreMealsIngredients.jsx","pages/ExploreDrinksIngredients.jsx","services/supportFunctions.js","components/DoneMeals.jsx","pages/RecipesDone.jsx","pages/FavoriteRecipes.jsx","pages/ExploreRecipesByArea.jsx","pages/Explore.jsx","context/provider/ApplicationProvider.js","pages/NotFound.jsx","pages/MealsInProgress.jsx","pages/DrinksInProgress.jsx","components/DrinkCarousel.jsx","pages/ScreenMealDetails.jsx","components/MealCarousel.jsx","pages/ScreenDrinkDetails.jsx","App.js","serviceWorker.js","index.js"],"names":["fetchMealsIngredients","ingredientes","a","responseAPI","fetch","then","response","json","fetchMealsName","nome","fetchMealsArea","fetchMealIngredients","fetchDrinkIngredients","fetchMealsFirstLetter","primeiraLetra","fetchDrinksIngredients","fetchDrinksName","fetchDrinksFirstLetter","fetchMeals","fetchDrinks","fetchCategoriesMeals","fetchCategoriesDrinks","fetchByMealCategory","categoryName","fetchByDrinkCategory","fetchMealsRandom","fetchDrinksRandom","fetchMealId","idMeal","fetchDrinkId","idDrink","fetchDrinksByIngredient","drinkName","fetchMealsByIngredient","mealName","fetchByArea","areaName","arrayOfIngredientsAndMeasurements","selectedRecipe","ingredientsArray","Object","entries","filter","keyName","includes","ingredient","map","e","splice","measureArray","reduce","acc","curr","index","push","concat","ApplicationContext","createContext","module","exports","NULL_RESPONSE","HeaderSearchBar","useContext","setMealsArray","setDrinksArray","useState","typedText","setTypedText","selectedRadio","setSelectedRadio","history","useHistory","pathname","location","meals","name","firstLetter","drinks","mealsRequest","isFirstLetter","invalidLength","length","global","alert","mealID","drinksRequest","drinkID","handleChange","target","value","type","id","className","data-testid","onChange","event","htmlFor","style","color","onClick","Login","password","setPassword","email","setEmail","aria-describedby","placeholder","variant","disabled","localStorage","setItem","JSON","stringify","Date","getFullYear","Footer","backgroundColor","src","drinkIcon","to","alt","exploreIcon","mealIcon","Header","pageName","isHiddenSearchBar","setSearchBar","toRenderSearchIcon","profileIcon","searchImage","ButtonsMealsSearch","mealsCategory","setMealsCategory","setMealsRecipes","setArrayToRender","changeArrayToRender","mealSelected","setMealSelected","requestAPI","useEffect","requestByMealCategory","responseByCategoryName","categoriesToRender","strCategory","key","RecipesMainScreen","mealsArray","recipesByMealsCategory","exploreByIngredients","setIngredientExplored","recipesToRender","recipe","strMealThumb","strMeal","Profile","parseUser","isValidUser","user","parse","clear","ButtonsDrinksSearch","drinksCategory","setDrinksRecipes","setDrinksCategory","drinkSelected","setDrinkSelected","drinkCategory","requestByDrinkCategory","DrinksMainScreen","drinksArray","recipesByDrinkCategory","strDrinkThumb","strDrink","ExploreRecipies","randomMeals","ExploreDrinks","randomDrinks","ExploreMealsIngredients","ingredients","setIngredients","ingredientsToRender","meal","requestIngredients","item","strIngredient","ExploreDrinksIngredients","drink","strIngredient1","getInProgressStoraged","recipeType","recipeID","targetName","stored","getItem","parseRecipesInProgress","progressTypeID","ingredientIndex","indexOf","getProgressStored","inProgressStored","some","onClipboardClicked","setClipboardState","URL","split","slice","join","copy","setTimeout","checkIfThereIsLocalStorage","storageKey","parseStorage","saveFavoriteRecipeOnStorage","favoriteRecipes","mealOrDrink","addRecipeOnStorage","find","recipeOnStorage","recipeIndex","removeRecipe","area","strArea","category","alcoholicOrNot","image","strAlcoholic","setHeartIcon","setRecipeToFavorite","checkLocalStorage","storedAsFavorite","isButtonFinishDisabled","storedProgress","selectedMeal","setButtonToFinish","splitedPathname","saveDoneRecipeOnStorage","doneRecipes","doneDate","toLocaleDateString","tags","strTags","unfavoriteButton","arrayFromStorage","DoneMeals","clipboardState","width","height","shareIcon","RecipesDone","setMeals","arrayToRender","typeOfFilter","Food","Drinks","filteredArray","FavoriteRecipes","reRender","setRerender","reRenderFoodOnly","setReRenderFoodOnly","filteredStorage","setFilteredStorage","renderFavorites","blackHeartIcon","renderFood","renderDrink","renderFavorited","arrayOfFavorites","renderByFilterButton","array","newArr","ExploreRecipesByArea","setArea","recipesByArea","setRecipesByArea","hasButtonAll","setButtonAll","requestByArea","twelveRecipes","mealRecipe","display","Explore","ApplicationProvider","children","selectedDrink","setSelectedDrink","setSelectedMeal","setStoredProgress","hasStartButton","setStartButton","alreadyStarted","setRecipeStarted","contextValue","Provider","NotFound","MealsInProgress","isRecipeFavorite","isFinishButtonEnabled","useParams","searchId","currentMeal","parseCurrentMeal","checkedIngredients","inProgressRecipes","cocktails","whiteHeartIcon","overflow","checked","getStoredProgress","parseStored","strInstructions","DrinksInProgress","currentDrink","parseCurrentDrink","DrinkCarousel","setDrinks","img1","setImg1","filteredDrinks","carouselLogic","onClickButtonPrevious","onClickButtonNext","maxLength","ScreenMealDetails","recipeAlreadyMade","recipeStarted","keys","strYoutube","url","unavailableVideo","MealCarousel","Carousel","Item","datat-testid","ScreenDrinkDetails","srtDrink","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"o6BAAaA,EAAqB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DAC7BC,EAAcC,MAAM,wDAAD,OAAyDH,IAC/EI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAFI,kBAG5BJ,GAH4B,2CAAH,sDAMrBK,EAAiB,SAACC,GAG7B,OAFoBL,MAAM,wDAAD,OAAyDK,IAC/EJ,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBG,EAAiB,WAG5B,OAFoBN,MAAM,2DACvBC,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBI,EAAuB,WAGlC,OAFoBP,MAAM,2DACvBC,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBK,EAAwB,WAGnC,OAFoBR,MAAM,+DACvBC,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBM,EAAwB,SAACC,GAGpC,OAFoBV,MAAM,wDAAD,OAAyDU,IAC/ET,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBQ,EAAyB,SAACd,GAGrC,OAFoBG,MAAM,4DAAD,OAA6DH,IACnFI,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBS,EAAkB,SAACP,GAG9B,OAFoBL,MAAM,4DAAD,OAA6DK,IACnFJ,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBU,EAAyB,SAACH,GAGrC,OAFoBV,MAAM,4DAAD,OAA6DU,IACnFT,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBW,EAAa,WAGxB,OAFoBd,MAAM,yDACvBC,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBY,EAAc,WAGzB,OAFoBf,MAAM,6DACvBC,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBa,EAAoB,uCAAG,4BAAAlB,EAAA,sEACRE,MAAM,2DAC7BC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAFG,cAC5BJ,EAD4B,yBAG3BA,GAH2B,2CAAH,qDAMpBkB,EAAqB,uCAAG,4BAAAnB,EAAA,sEACTE,MAAM,+DAC7BC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAFI,cAC7BJ,EAD6B,yBAG5BA,GAH4B,2CAAH,qDAMrBmB,EAAsB,SAACC,GAGlC,OAFoBnB,MAAM,wDAAD,OAAyDmB,IAC/ElB,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBiB,EAAuB,SAACD,GAGnC,OAFoBnB,MAAM,4DAAD,OAA6DmB,IACnFlB,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBkB,EAAmB,WAG9B,OAFoBrB,MAAM,sDACvBC,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBmB,EAAoB,WAG/B,OAFoBtB,MAAM,0DACvBC,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBoB,EAAc,SAACC,GAG1B,OAFoBxB,MAAM,wDAAD,OAAyDwB,IAC/EvB,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBsB,EAAe,SAACC,GAG3B,OAFoB1B,MAAM,4DAAD,OAA6D0B,IACnFzB,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpBwB,EAA0B,SAACC,GAItC,OAFoB5B,MAAM,GAAD,OADb,6DACa,OAAU4B,IAChC3B,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpB0B,EAAyB,SAACC,GAIrC,OAFoB9B,MAAM,GAAD,OADb,yDACa,OAAU8B,IAChC7B,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpB4B,EAAc,SAACC,GAI1B,OAFoBhC,MAAM,GAAD,OADb,yDACa,OAAUgC,IAChC/B,MAAK,SAACC,GAAD,OAAcA,EAASC,WAIpB8B,EAAoC,SAACC,GAChD,IAAMC,EAAmBC,OAAOC,QAAQH,GACrCI,QAAO,SAACC,GAAD,OAAaA,EAAQ,GAAGC,SAAS,oBACxCF,QAAO,SAACG,GAAD,OAAiBA,EAAWD,SAAS,SAC5CF,QAAO,SAACG,GAAD,OAAiBA,EAAWD,SAAS,OAC5CF,QAAO,SAACG,GAAD,OAAiBA,EAAWD,SAAS,QAC5CE,KAAI,SAACC,GAAD,OAAOA,EAAEC,OAAO,EAAG,MAEpBC,EAAeT,OAAOC,QAAQH,GACjCI,QAAO,SAACC,GAAD,OAAaA,EAAQ,GAAGC,SAAS,iBACxCF,QAAO,SAACG,GAAD,OAAiBA,EAAWD,SAAS,SAC5CF,QAAO,SAACG,GAAD,OAAiBA,EAAWD,SAAS,OAC5CF,QAAO,SAACG,GAAD,OAAiBA,EAAWD,SAAS,QAC5CE,KAAI,SAACC,GAAD,OAAOA,EAAEC,OAAO,EAAG,MAE1B,OAAOT,EACJW,QAAO,SAACC,EAAKC,EAAMC,GAElB,OADAF,EAAIG,KAAKF,EAAKG,OAAON,EAAaI,KAC3BF,IACN,M,+BC1JP,WAEMK,EAAqBC,0BAEZD,O,oBCJfE,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,uBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,+GCA3CD,EAAOC,QAAU,IAA0B,wC,iHCcrCC,G,MAAgB,uEA2HPC,IAzHf,WAA4B,IAAD,EACiBC,qBAAWN,KAA7CO,EADiB,EACjBA,cAAeC,EADE,EACFA,eADE,EAESC,mBAAS,IAFlB,mBAElBC,EAFkB,KAEPC,EAFO,OAGiBF,mBAAS,cAH1B,mBAGlBG,EAHkB,KAGHC,EAHG,KAInBC,EAAUC,cAEIC,EAAeF,EAA3BG,SAAYD,SAEdE,EAAQ,CACZ7B,WAAY7C,IACZ2E,KAAMnE,IACNoE,YAAa/D,KAGTgE,EAAS,CACbhC,WAAY9B,IACZ4D,KAAM3D,IACN4D,YAAa3D,KAGT6D,EAAY,uCAAG,kCAAA5E,EAAA,yDACb6E,EAAkC,gBAAlBX,EAChBY,EAAgBd,EAAUe,OAAS,GAA0B,IAArBf,EAAUe,QACpDF,IAAiBC,EAHF,yCAIVE,EAAOC,MAAM,0CAJH,uBAMOT,EAAMN,GAAeF,GAN5B,UAOO,QADpB/D,EANa,QAOHuE,MAPG,yCAQVQ,EAAOC,MAAMvB,IARH,UAUc,IAA7BzD,EAAYuE,MAAMO,OAVH,wBAWXG,EAASjF,EAAYuE,MAAM,GAAG9C,OAXnB,kBAYV0C,EAAQhB,KAAR,mBAAyB8B,KAZf,QAcnBrB,EAAc5D,EAAYuE,OAdP,4CAAH,qDAiBZW,EAAa,uCAAG,kCAAAnF,EAAA,yDACd6E,EAAkC,gBAAlBX,EAChBY,EAAgBd,EAAUe,OAAS,GACrCF,IAAiBC,EAHD,yCAIXE,EAAOC,MAAM,kDAJF,uBAMMN,EAAOT,GAAeF,GAN5B,UAOO,QADrB/D,EANc,QAOJ0E,OAPI,yCAQXK,EAAOC,MAAMvB,IARF,UAUc,IAA9BzD,EAAY0E,OAAOI,OAVH,wBAWZK,EAAUnF,EAAY0E,OAAO,GAAG/C,QAXpB,kBAYXwC,EAAQhB,KAAR,mBAAyBgC,KAZd,QAcpBtB,EAAe7D,EAAY0E,QAdP,4CAAH,qDAsBbU,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,KAAMC,EAAOH,EAAPG,GACR,SAATD,GACFvB,EAAasB,GAEF,UAATC,GACFrB,EAAiBsB,IAIrB,OACE,yBAAKC,UAAU,iBACb,2BACEF,KAAK,OACLG,cAAY,eACZJ,MAAQvB,EACR4B,SAAW,SAACC,GAAD,OAAWR,EAAaQ,MAErC,2BAAOC,QAAQ,aAAaC,MAAQ,CAAEC,MAAO,UAC3C,2BACER,KAAK,QACLC,GAAG,aACHhB,KAAK,eACLkB,cAAY,0BACZJ,MAAQrB,EACR+B,QAAU,SAACJ,GAAD,OAAWR,EAAaQ,MAPtC,eAWA,2BAAOC,QAAQ,OAAOC,MAAQ,CAAEC,MAAO,UACrC,2BACER,KAAK,QACLC,GAAG,OACHhB,KAAK,eACLkB,cAAY,oBACZJ,MAAQrB,EACR+B,QAAU,SAACJ,GAAD,OAAWR,EAAaQ,MAPtC,QAWA,2BAAOC,QAAQ,cAAcC,MAAQ,CAAEC,MAAO,UAC5C,2BACER,KAAK,QACLC,GAAG,cACHhB,KAAK,eACLkB,cAAY,4BACZJ,MAAQrB,EACR+B,QAAU,SAACJ,GAAD,OAAWR,EAAaQ,MAPtC,kBAWA,4BACEL,KAAK,SACLG,cAAY,kBACZM,QAAU,iBA1DG,aAAb3B,EAAgCM,IACnB,aAAbN,EAAgCa,SAApC,IAsDE,c,wSCjCSe,MAzFf,WACE,IAAM9B,EAAUC,cADD,EAGiBN,mBAAS,IAH1B,mBAGRoC,EAHQ,KAGEC,EAHF,OAIWrC,mBAAS,IAJpB,mBAIRsC,EAJQ,KAIDC,EAJC,KAMTjB,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,EAAgBD,EAAhBC,MACR,MAAgB,UADQD,EAATb,KACW6B,EAASf,GAASa,EAAYb,IAmB1D,OACE,yBAAKG,UAAU,mBACb,0BAAMA,UAAU,mCACd,yBACEA,UAAU,+CAEV,yBAAKA,UAAU,0BACb,uBAAGA,UAAU,qBAAb,kBAIF,yBAAKA,UAAU,mBACb,2BACEF,KAAK,QACLf,KAAK,QACLiB,UAAU,2CACVa,mBAAiB,YACjBhB,MAAQc,EACRG,YAAY,iBACZb,cAAY,cACZC,SAAW,SAACC,GAAD,OAAWR,EAAaQ,OAGvC,yBAAKH,UAAU,sBACb,2BACEF,KAAK,WACLf,KAAK,WACLiB,UAAU,8CACVH,MAAQY,EACRK,YAAY,gCACZb,cAAY,iBACZC,SAAW,SAACC,GAAD,OAAWR,EAAaQ,OAGvC,4BACEH,UAAU,iBACVF,KAAK,SACLG,cAAY,mBACZc,QAAQ,UACRC,WArDJL,EAAM3D,SAAS,SAChB2D,EAAM3D,SAAS,MACfyD,EAASpB,OAHW,GAuDfkB,QACG,WA9CXU,aAAaC,QAAQ,OAAQC,KAAKC,UAAU,CAAET,WAC9CM,aAAaC,QAAQ,aAAc,GACnCD,aAAaC,QAAQ,iBAAkB,GA8C3BxC,EAAQhB,KAAK,cATnB,WAgBF,yBAAKsC,UAAU,kBACb,uBAAGA,UAAU,kBAAb,2BAGU,IAAIqB,MAAOC,oB,uFC5ChBC,MAlCf,WACE,OACE,4BACEtB,cAAY,SACZD,UAAU,SACVK,MAAQ,CAAEmB,gBAAiB,UAE3B,yBAAKxB,UAAU,oBACb,kBAAC,IAAD,CACEyB,IAAMC,IACNzB,cAAY,oBACZ0B,GAAG,YAEH,yBAAKF,IAAMC,IAAYE,IAAI,YAE7B,kBAAC,IAAD,CACEH,IAAMI,IACN5B,cAAY,qBACZ0B,GAAG,aAEH,yBAAKF,IAAMI,IAAcD,IAAI,aAE/B,kBAAC,IAAD,CACEH,IAAMK,IACN7B,cAAY,kBACZ0B,GAAG,YAEH,yBAAKF,IAAMK,IAAWF,IAAI,a,gDCiCrBG,MA3Df,YAA+B,IAAbC,EAAY,EAAZA,SAAY,EACc3D,oBAAS,GADvB,mBACrB4D,EADqB,KACFC,EADE,KAERtD,EAAeD,cAA3BE,SAAYD,SAChBuD,GAAqB,EAYzB,MAViB,aAAbvD,GACY,aAAbA,GACa,2BAAbA,IACDuD,GAAqB,GAQrB,yBACEnC,UAAU,yCAEV,yBAAKA,UAAU,wBACb,kBAAC,IAAD,CACEA,UAAU,sBACVyB,IAAMW,IACNnC,cAAY,kBACZ0B,GAAG,WAEH,yBAAKF,IAAMW,IAAcR,IAAI,UAE/B,yBACE5B,UAAU,aACVC,cAAY,cAEV+B,GAEHG,EACC,4BACEnC,UAAU,oBACVF,KAAK,SACLS,QAAU,WA1BlB2B,GAAcD,KA4BN,yBACER,IAAMY,IACNT,IAAI,SACJ3B,cAAY,oBAIhB,KAEDgC,EAAoB,kBAAChE,EAAA,EAAD,MAAsB,Q,OCKpCqE,MAxDf,WAA+B,IAAD,EAIQpE,qBAAWN,KAHvC2E,EADoB,EACpBA,cAAeC,EADK,EACLA,iBACrBC,EAF0B,EAE1BA,gBACAC,EAH0B,EAG1BA,iBAAkBC,EAHQ,EAGRA,oBAClBC,EAJ0B,EAI1BA,aAAcC,EAJY,EAIZA,gBAEVC,EAAU,uCAAG,4BAAAxI,EAAA,sEACSkB,cADT,OACXjB,EADW,OAEjBiI,EAAiBjI,EAAYuE,OAFZ,2CAAH,qDAKhBiE,qBAAU,WACRD,MACC,IAEH,IAAME,EAAqB,uCAAG,WAAOrH,GAAP,eAAArB,EAAA,sEACSoB,YAAoBC,GAD7B,OACtBsH,EADsB,OAE5BR,EAAgBQ,EAAuBnE,OACvC+D,EAAgBlH,GAHY,2CAAH,sDAMrBuH,EAAqBX,EACxBzF,QAAO,WAAkBW,GAAlB,IAAG0F,EAAH,EAAGA,YAAH,OAA4B1F,GAxBjB,GAwB4C0F,KAEjE,OACE,yBAAKnD,UAAU,0BACb,4BACEA,UAAU,2BACVF,KAAK,SACLG,cAAY,sBACZM,QAAU,kBAAMmC,GAAiB,KAJnC,OAQCQ,EAAmBhG,KAAI,gBAAGiG,EAAH,EAAGA,YAAH,OACtB,4BACEnD,UAAU,2BACVF,KAAK,SACLsD,IAAMD,EACNpE,KAAOoE,EACPlD,cAAA,UAAiBkD,EAAjB,oBACA5C,QAAU,YAAiB,IAAdX,EAAa,EAAbA,OACPA,EAAOb,OAAS6D,EAClBF,GAAkBC,GAElBK,EAAsBpD,EAAOb,QAIhCoE,Q,MC0CIE,MAtFf,WACE,IAAM3E,EAAUC,cADW,EASCT,qBAAWN,KANrC0F,EAHyB,EAGzBA,WACAnF,EAJyB,EAIzBA,cACAoF,EALyB,EAKzBA,uBACAb,EANyB,EAMzBA,iBACAC,EAPyB,EAOzBA,oBACAa,EARyB,EAQzBA,qBACAC,EATyB,EASzBA,sBACIC,EAAkBf,EACpBY,EACAD,EAKER,EAAU,uCAAG,4BAAAxI,EAAA,sEACSgB,cADT,OACXf,EADW,OAEjB4D,EAAc5D,EAAYuE,OAFT,2CAAH,qDAuBhB,OAlBAiE,qBAAU,WAC4B,IAAhCS,EAAqBnE,OACvByD,IAEA3E,EAAcqF,KAEf,IAEHT,qBAAU,WAC8B,IAAlCQ,EAAuBlE,OACzBqD,GAAiB,GAEjBA,GAAiB,KAElB,CAACa,IAEJR,qBAAU,kBAAM,kBAAMU,EAAsB,OAAK,IAG/C,yBAAKzD,UAAU,oBACb,kBAAC,EAAD,CAAQgC,SAAS,YACjB,kBAAC,EAAD,MACA,yBAAKhC,UAAU,mBACb,yBACEA,UAAU,wBAET0D,EAAgBxG,KAAI,SAACyG,EAAQlG,GAAT,OACnB,yBACEuC,UAAU,OACVoD,IAAMO,EAAO3H,QAEb,4BACEgE,UAAU,WACVF,KAAK,SACLG,cAAA,UAAiBxC,EAAjB,gBACAsB,KAAO4E,EAAO3H,OACduE,QAAU,gBAAGX,EAAH,EAAGA,OAAH,OAAgBlB,EAAQhB,KAAR,mBAAyBkC,EAAOb,SAE1D,yBACEiB,UAAU,eACVyB,IAAMkC,EAAOC,aACb7E,KAAO4E,EAAO3H,OACd4F,IAAI,OACJ3B,cAAA,UAAiBxC,EAAjB,eAEF,yBAAKuC,UAAU,uBACb,uBACEA,UAAU,iBACVC,cAAA,UAAiBxC,EAAjB,cACAsB,KAAO4E,EAAO3H,QAEb2H,EAAOE,iBAQtB,kBAAC,EAAD,QC7BSC,MA1Df,WACE,IAEIC,EAFErF,EAAUC,cACZqF,GAAc,EAGlB,GAA4B,IAAxB/C,aAAa5B,OAAc,CAAC,IACtB4E,EAAShD,aAATgD,KACRF,EAAY5C,KAAK+C,MAAMD,GACvBD,GAAc,EAGhB,OACE,yBAAK/D,cAAY,cACf,kBAAC,EAAD,CAAQ+B,SAAS,WACjB,wBAAI/B,cAAY,iBACb+D,EACCD,EAAUpD,MACR,MAEN,4BACEb,KAAK,SACLG,cAAY,mBACZM,QACG,WACC7B,EAAQhB,KAAK,sBALnB,mBAWA,4BACEoC,KAAK,SACLG,cAAY,uBACZM,QACG,WACC7B,EAAQhB,KAAK,yBALnB,sBAWA,4BACEoC,KAAK,SACLG,cAAY,qBACZM,QACG,WACCU,aAAakD,QACbzF,EAAQhB,KAAK,OANnB,QAYA,kBAAC,EAAD,QCSS0G,MA7Df,WAAgC,IAAD,EASzBlG,qBAAWN,KAPbyG,EAF2B,EAE3BA,eACAC,EAH2B,EAG3BA,iBACAC,EAJ2B,EAI3BA,kBACAC,EAL2B,EAK3BA,cACAC,EAN2B,EAM3BA,iBACA/B,EAP2B,EAO3BA,iBACAC,EAR2B,EAQ3BA,oBAGIG,EAAU,uCAAG,4BAAAxI,EAAA,sEACSmB,cADT,OACXlB,EADW,OAEjBgK,EAAkBhK,EAAY0E,QAFb,2CAAH,qDAKhB8D,qBAAU,WACRD,MACC,IAEH,IAAMI,EAAqBmB,EACxBvH,QAAO,SAAC4H,EAAejH,GAAhB,OAA0BA,GAvBf,GAuB0CiH,KAEzDC,EAAsB,uCAAG,WAAOhJ,GAAP,eAAArB,EAAA,sEACQsB,YAAqBD,GAD7B,OACvBsH,EADuB,OAE7BqB,EAAiBrB,EAAuBhE,QACxCwF,EAAiB9I,GAHY,2CAAH,sDAM5B,OACE,yBAAKqE,UAAU,0BACb,4BACEA,UAAU,4BACVF,KAAK,SACLG,cAAY,sBACZM,QAAU,kBAAMmC,GAAiB,KAJnC,OAQCQ,EAAmBhG,KAAI,gBAAGiG,EAAH,EAAGA,YAAH,OACtB,4BACEnD,UAAU,4BACVF,KAAK,SACLsD,IAAMD,EACNpE,KAAOoE,EACPlD,cAAA,UAAiBkD,EAAjB,oBACA5C,QAAU,YAAiB,IAAdX,EAAa,EAAbA,OACPA,EAAOb,OAASyF,EAClB9B,GAAkBC,GAElBgC,EAAuB/E,EAAOb,QAIhCoE,QCqCGyB,MAtFf,WACE,IAAMlG,EAAUC,cADU,EASET,qBAAWN,KANrCiH,EAHwB,EAGxBA,YACAzG,EAJwB,EAIxBA,eACAsE,EALwB,EAKxBA,iBACAC,EANwB,EAMxBA,oBACAmC,EAPwB,EAOxBA,uBACAtB,EARwB,EAQxBA,qBACAC,EATwB,EASxBA,sBACIC,EAAkBf,EACpBmC,EACAD,EAKE/B,EAAU,uCAAG,4BAAAxI,EAAA,sEACSiB,cADT,OACXhB,EADW,OAEjB6D,EAAe7D,EAAY0E,QAFV,2CAAH,qDAuBhB,OAlBA8D,qBAAU,WAC4B,IAAhCS,EAAqBnE,OACvByD,IAEA1E,EAAeoF,KAEhB,IAEHT,qBAAU,WAC8B,IAAlC+B,EAAuBzF,OACzBqD,GAAiB,GAEjBA,GAAiB,KAElB,CAACoC,IAEJ/B,qBAAU,kBAAM,kBAAMU,EAAsB,OAAK,IAG/C,yBAAKzD,UAAU,oBACb,kBAAC,EAAD,CAAQgC,SAAS,YACjB,kBAAC,EAAD,MACA,yBAAKhC,UAAU,mBACb,yBACEA,UAAU,wBAET0D,EAAgBxG,KAAI,SAACyG,EAAQlG,GAAT,OACnB,yBACEuC,UAAU,OACVoD,IAAMO,EAAOzH,SAEb,4BACE8D,UAAU,WACVF,KAAK,SACLG,cAAA,UAAiBxC,EAAjB,gBACAsB,KAAO4E,EAAOzH,QACdqE,QAAU,gBAAGX,EAAH,EAAGA,OAAH,OAAgBlB,EAAQhB,KAAR,mBAAyBkC,EAAOb,SAE1D,yBACEiB,UAAU,eACVyB,IAAMkC,EAAOoB,cACbhG,KAAO4E,EAAOzH,QACd0F,IAAI,QACJ3B,cAAA,UAAiBxC,EAAjB,eAEF,yBAAKuC,UAAU,uBACb,uBACEA,UAAU,iBACVC,cAAA,UAAiBxC,EAAjB,cACAsB,KAAO4E,EAAOzH,SAEbyH,EAAOqB,kBAQtB,kBAAC,EAAD,QClCSC,MApDf,WACE,IAAMvG,EAAUC,cAEVuG,EAAW,uCAAG,8BAAA5K,EAAA,sEACQuB,cADR,cACZtB,EADY,OAEVyB,EAAWzB,EAAYuE,MAAM,GAA7B9C,OAFU,kBAGX0C,EAAQhB,KAAR,mBAAyB1B,KAHd,2CAAH,qDAMjB,OACE,6BACE,kBAAC,EAAD,CAAQgG,SAAS,qBACjB,4BACElC,KAAK,SACLG,cAAY,wBACZM,QACG,WACC7B,EAAQhB,KAAK,oCALnB,oBAYA,4BACEoC,KAAK,SACLG,cAAY,kBACZM,QACG,WACC7B,EAAQhB,KAAK,4BALnB,uBAYA,4BACEoC,KAAK,SACLG,cAAY,mBACZM,QACG,WACC2E,MALN,kBAWA,kBAAC,EAAD,QCRSC,MAvCf,WACE,IAAMzG,EAAUC,cAEVyG,EAAY,uCAAG,8BAAA9K,EAAA,sEACOwB,cADP,cACbvB,EADa,OAEX2B,EAAY3B,EAAY0E,OAAO,GAA/B/C,QAFW,kBAGZwC,EAAQhB,KAAR,mBAAyBxB,KAHb,2CAAH,qDAMlB,OACE,6BACE,kBAAC,EAAD,CAAQ8F,SAAS,qBACjB,4BACElC,KAAK,SACLG,cAAY,wBACZM,QACG,WACC7B,EAAQhB,KAAK,oCALnB,oBAWA,4BACEoC,KAAK,SACLG,cAAY,mBACZM,QACG,WACC6E,MALN,kBAWA,kBAAC,EAAD,QCoBSC,MAnDf,WAAoC,IAAD,EACKhH,mBAAS,IADd,mBAC1BiH,EAD0B,KACbC,EADa,KAEzB9B,EAA0BvF,qBAAWN,KAArC6F,sBAEF/E,EAAUC,cAEV6G,EAAsBF,EACzBxI,QAAO,SAAC2I,EAAMhI,GAAP,OAAiBA,GATL,IASiCgI,KAEjDC,EAAkB,uCAAG,4BAAApL,EAAA,sEACCS,cADD,OACnBR,EADmB,OAEzBgL,EAAehL,EAAYuE,OAFF,2CAAH,qDASxB,OAJAiE,qBAAU,WACR2C,MACC,IAGD,6BACE,kBAAC,EAAD,CAAQ1D,SAAS,0BAChBwD,EAAoBtI,KAAI,SAACyI,EAAMlI,GAAP,OACvB,4BACEqC,KAAK,SACLsD,IAAM3F,EACNwC,cAAA,UAAiBxC,EAAjB,oBACA8C,QAAO,sBAAG,4BAAAjG,EAAA,sEACkB+B,YAAuBsJ,EAAKC,eAD9C,OACFrL,EADE,OAERkJ,EAAsBlJ,EAAYuE,OAClCJ,EAAQhB,KAAK,YAHL,4CAMV,6BACE,yBACE+D,IAAG,uDAAmDkE,EAAKC,cAAxD,cACHhE,IAAI,aACJ3B,cAAA,UAAiBxC,EAAjB,eAEF,uBACEwC,cAAA,UAAiBxC,EAAjB,eAECkI,EAAKC,oBAKd,kBAAC,EAAD,QCKSC,MAnDf,WAAqC,IAAD,EACIxH,mBAAS,IADb,mBAC3BiH,EAD2B,KACdC,EADc,KAE1B9B,EAA0BvF,qBAAWN,KAArC6F,sBAEF/E,EAAUC,cAEV6G,EAAsBF,EACzBxI,QAAO,SAACgJ,EAAOrI,GAAR,OAAkBA,GATN,IASkCqI,KAElDJ,EAAkB,uCAAG,4BAAApL,EAAA,sEACCU,cADD,OACnBT,EADmB,OAEzBgL,EAAehL,EAAY0E,QAFF,2CAAH,qDASxB,OAJA8D,qBAAU,WACR2C,MACC,IAGD,6BACE,kBAAC,EAAD,CAAQ1D,SAAS,0BAChBwD,EAAoBtI,KAAI,SAACyI,EAAMlI,GAAP,OACvB,4BACEqC,KAAK,SACLG,cAAA,UAAiBxC,EAAjB,oBACA2F,IAAM3F,EACN8C,QAAO,sBAAG,4BAAAjG,EAAA,sEACkB6B,YAAwBwJ,EAAKI,gBAD/C,OACFxL,EADE,OAERkJ,EAAsBlJ,EAAY0E,QAClCP,EAAQhB,KAAK,YAHL,4CAMV,6BACE,yBACE+D,IAAG,2DAAuDkE,EAAKI,eAA5D,cACHnE,IAAI,aACJ3B,cAAA,UAAiBxC,EAAjB,eAEF,uBACEwC,cAAA,UAAiBxC,EAAjB,eAECkI,EAAKI,qBAKd,kBAAC,EAAD,Q,kCCpDOC,EAAwB,SAACC,EAAYC,EAAUC,GAC1D,IAAMC,EAASnF,aAAaoF,QAAQ,qBAC9BC,EAAyBnF,KAAK+C,MAAMkC,GACpCG,EAAiBD,EAAuBL,GAAYC,GAC1D,IAAKK,EAEH,OADAD,EAAuBL,GAAYC,GAAY,CAACC,GACzClF,aACJC,QAAQ,oBAAqBC,KAAKC,UAAUkF,IAEjD,GAAIC,EAAevJ,SAASmJ,GAAa,CACvC,IAAMK,EAAkBD,EACrBE,QAAQN,GACXI,EAAenJ,OAAOoJ,EAAiB,QAEvCD,EAAe7I,KAAKyI,GAEtBlF,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUkF,KAG9CI,EAAoB,SAACzJ,EAAYiJ,EAAUS,EAAkBV,GACxE,QAAKU,EAAiBV,GAAYC,IAGTS,EAAiBV,GAAYC,GAC9BU,MAAK,SAACjB,GAAD,OAAUA,IAAS1I,EAAW,OAGhD4J,EAAqB,SAACC,EAAmBC,GAEpD,GADyBA,EAAIC,MAAM,KAAKhK,SAAS,eAC3B,CAEpB+J,EAAMA,EAAIC,MAAM,KAAKC,MAAM,EADH,GACuBC,KAAK,KAEtDC,IAAK,wBAAD,OAAyBJ,IAC7BD,GAAkB,GAElBM,YAAW,WACTN,GAAkB,KAFA,MAMTO,EAA6B,SAACC,GACzC,IAAMlB,EAASnF,aAAaoF,QAAQiB,GAC9BC,EAAepG,KAAK+C,MAAMkC,GAChC,OAAKmB,IACI,GAYEC,EAA8B,SAAC7D,EAAQsC,GAClD,IACIwB,EAAkB,GAClBC,EAAc,SACC,WAAfzB,IAAyByB,EAAc,WAEvCL,EALqB,qBAMvBI,EAAkBtG,KAAK+C,MAAMjD,aAAaoF,QANnB,qBASzB,IAAMsB,EAAqBF,EACxBG,MAAK,SAACC,GAAD,OAAqBA,EAAgB9H,KAAO4D,EAAO+D,MACtDC,EAnBc,SAACF,EAAiBE,GACrC,IAAMG,EAAcL,EAAgBhB,QAAQkB,GAC5CF,EAAgBrK,OAAO0K,EAAa,GAwClCC,CAAaN,EAAiBE,GAtBX,WAAf1B,EACFwB,EAAgB/J,KAAK,CACnBqC,GAAI4D,EAAO3H,OACX8D,KAAMmG,EACN+B,KAAMrE,EAAOsE,QACbC,SAAUvE,EAAOR,YACjBgF,eAAgB,GAChBpJ,KAAM4E,EAAOE,QACbuE,MAAOzE,EAAOC,eAGhB6D,EAAgB/J,KAAK,CACnBqC,GAAI4D,EAAOzH,QACX4D,KAAMmG,EACN+B,KAAM,GACNE,SAAUvE,EAAOR,YACjBgF,eAAgBxE,EAAO0E,aACvBtJ,KAAM4E,EAAOqB,SACboD,MAAOzE,EAAOoB,gBAMpB9D,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAUqG,KAG5Ca,EAAe,SAACC,EAAqBxI,GAChD,IAAMyI,EAAoBnB,EAA2B,mBACjDmB,GAAkD,IAA7BA,EAAkBnJ,SACX8B,KAAK+C,MAAMjD,aAAaoF,QAAQ,oBAE3DO,MAAK,SAAC6B,GAAD,OAAsBA,EAAiB1I,KAAOA,MAC/BwI,GAAoB,KAIlCG,EAAyB,SACpCC,EACAjK,EACAkK,EACAC,GAEA,IAAMC,EAAkBpK,EAAQG,SAASD,SAASoI,MAAM,KACpDf,EAAa6C,EAAgB,GAC3B/I,EAAK+I,EAAgB,IACR,YAAf7C,IAA0BA,EAAa,SACxB,YAAfA,IAA0BA,EAAa,aACG,IAA1CrJ,OAAOC,QAAQ8L,GAAgBtJ,QAAgBsJ,EAAe1C,GAAYlG,KAI1E8I,EAHyBpM,YAAkCmM,GAAcvJ,SACnDsJ,EAAe1C,GAAYlG,GAAIV,SAS9C0J,EAA0B,SAACpF,EAAQsC,GAC9C,IACI+C,EAAc,GAEd3B,EAHiB,iBAInB2B,EAAc7H,KAAK+C,MAAMjD,aAAaoF,QAJnB,iBAOF,WAAfJ,EACF+C,EAAYtL,KAAK,CACfqC,GAAI4D,EAAO3H,OACX8D,KAAMmG,EACN+B,KAAMrE,EAAOsE,QACbC,SAAUvE,EAAOR,YACjBgF,eAAgB,GAChBpJ,KAAM4E,EAAOE,QACbuE,MAAOzE,EAAOC,aACdqF,UAAU,IAAI5H,MAAO6H,mBAAmB,SACxCC,KAAM,CAACxF,EAAOyF,QAAQ,GAAIzF,EAAOyF,QAAQ,MAG3CJ,EAAYtL,KAAK,CACfqC,GAAI4D,EAAOzH,QACX4D,KAAMmG,EACN+B,KAAM,GACNE,SAAUvE,EAAOR,YACjBgF,eAAgBxE,EAAO0E,aACvBtJ,KAAM4E,EAAOqB,SACboD,MAAOzE,EAAOoB,cACdkE,SAAU,GACVE,KAAM,KAIVlI,aAAaC,QAAQ,cAAeC,KAAKC,UAAU4H,KASxCK,EAAmB,SAACtJ,GAC/B,IAAMuJ,EAAmBnI,KAAK+C,MAAMjD,aAAaoF,QAAQ,oBACzDiD,EAAiBlM,OAAOkM,EAAiB7C,QAAQ1G,EAAI,GAAI,GAEzDkB,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAUkI,KClE1CC,MA1Gf,YAA+B,IAAVzK,EAAS,EAATA,MACbJ,EAAUC,cADY,EAEkBT,qBAAWN,KAAjD4L,EAFoB,EAEpBA,eAAgB1C,EAFI,EAEJA,kBAExB,OACE,6BAEIhI,EAAM5B,KAAI,SAACyI,EAAMlI,GACf,MAAkB,WAAdkI,EAAK7F,KAEL,yBAAKsD,IAAM3F,GACT,4BACEqC,KAAK,SACLS,QAAU,kBAAM7B,EAAQhB,KAAR,mBAAyBiI,EAAK5F,OAE9C,6BACE,yBACEM,MAAQ,CAAEoJ,MAAO,OAAQC,OAAQ,QACjCjI,IAAMkE,EAAKyC,MACXxG,IAAI,SACJ3B,cAAA,UAAiBxC,EAAjB,uBAEF,uBAAGwC,cAAA,UAAiBxC,EAAjB,qBAA6CkI,EAAK5G,QAGzD,uBACEkB,cAAA,UAAiBxC,EAAjB,yBADF,UAGOkI,EAAKqC,KAHZ,cAGsBrC,EAAKuC,WAE3B,4BACEzG,IAAMkI,IACN7J,KAAK,SACLG,cAAA,UAAiBxC,EAAjB,yBACA8C,QAAU,WACR,IAAM3B,EAAQ,mBAAe+G,EAAK5F,IAClC8G,EAAmBC,EAAmBlI,KAGxC,yBAAK6C,IAAMkI,IAAY/H,IAAI,kBAE7B,2BACG4H,EAAiB,gBAAkB,IAEtC,uBAAGvJ,cAAA,UAAiBxC,EAAjB,0BAAkDkI,EAAKsD,UAC1D,uBACEhJ,cAAA,UAAiBxC,EAAjB,YAA0BkI,EAAKwD,KAAK,GAApC,oBAEExD,EAAKwD,KAAK,IAEd,uBACElJ,cAAA,UAAiBxC,EAAjB,YAA0BkI,EAAKwD,KAAK,GAApC,oBAEExD,EAAKwD,KAAK,KAMlB,yBAAK/F,IAAM3F,GACT,4BACEqC,KAAK,SACLS,QAAU,kBAAM7B,EAAQhB,KAAR,mBAAyBiI,EAAK5F,OAE9C,6BACE,yBACEM,MAAQ,CAAEoJ,MAAO,OAAQC,OAAQ,QACjCjI,IAAMkE,EAAKyC,MACXxG,IAAI,SACJ3B,cAAA,UAAiBxC,EAAjB,uBAEF,uBAAGwC,cAAA,UAAiBxC,EAAjB,qBAA6CkI,EAAK5G,QAGzD,uBACEkB,cAAA,UAAiBxC,EAAjB,yBAEEkI,EAAKwC,gBAET,4BACE1G,IAAMkI,IACN7J,KAAK,SACLG,cAAA,UAAiBxC,EAAjB,yBACA8C,QAAU,WACR,IAAM3B,EAAQ,mBAAe+G,EAAK5F,IAClC8G,EAAmBC,EAAmBlI,KAGxC,yBAAK6C,IAAMkI,IAAY/H,IAAI,kBAE7B,2BACG4H,EAAiB,gBAAkB,IAEtC,uBAAGvJ,cAAA,UAAiBxC,EAAjB,0BAAkDkI,EAAKsD,gBCxCzDW,MAvDf,WAAwB,IAAD,EACKvL,mBAAS,IADd,mBACdS,EADc,KACP+K,EADO,KAGrB9G,qBAAU,WACJsE,EAA2B,eAC7BwC,EAASxC,EAA2B,gBAEpCpG,aAAaC,QAAQ,cAAeC,KAAKC,UAAU,OAEpD,IAEH,IAAM0I,EAAgB,SAAC,GAAc,IAAZ/K,EAAW,EAAXA,KACjBgL,EAAe,CACnBC,KAAM,SACNC,OAAQ,UAEV,GAAa,QAATlL,EAAgB,CAClB,IAAMmL,EAAgBpL,EAAMhC,QAAO,SAAC6I,GAAD,OAAUA,EAAK7F,OAASiK,EAAahL,MACxE,OAAO8K,EAASK,GAElBL,EAASxC,EAA2B,iBAGtC,OACE,6BACE,kBAAC,EAAD,CAAQrF,SAAS,oBACjB,4BACElC,KAAK,SACLG,cAAY,oBACZlB,KAAK,MACLwB,QAAU,gBAAGX,EAAH,EAAGA,OAAH,OAAgBkK,EAAclK,KAJ1C,OAQA,4BACEE,KAAK,SACLG,cAAY,qBACZlB,KAAK,OACLwB,QAAU,gBAAGX,EAAH,EAAGA,OAAH,OAAgBkK,EAAclK,KAJ1C,QAQA,4BACEE,KAAK,SACLG,cAAY,sBACZlB,KAAK,SACLwB,QAAU,gBAAGX,EAAH,EAAGA,OAAH,OAAgBkK,EAAclK,KAJ1C,UAQA,kBAAC,EAAD,CAAWd,MAAQA,M,kBC6KVqL,OA5Nf,WAA4B,IAAD,EACO9L,oBAAS,GADhB,mBAClB+L,EADkB,KACRC,EADQ,OAEuBhM,oBAAS,GAFhC,mBAElBiM,EAFkB,KAEAC,EAFA,OAGqBlM,mBAAS,IAH9B,mBAGlBmM,EAHkB,KAGDC,EAHC,KAInB/L,EAAUC,cAJS,EAMDT,qBAAWN,KAD3B4L,EALiB,EAKjBA,eACN1C,EANuB,EAMvBA,kBACIW,EAAkBtG,KAAK+C,MAAMjD,aAAaoF,QAAQ,oBAExDtD,qBAAU,WACH0E,GACHxG,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAU,QAI3D,IAgHMsJ,EAAkB,SAACvN,EAAG2C,EAAMrC,GAChC,MAAa,WAATqC,EAjHa,SAAC3C,EAAGM,GAAJ,OACjB,yBAAK2F,IAAMjG,EAAE4C,IACX,wBAAIE,cAAA,UAAiBxC,EAAjB,qBACDN,EAAE4B,MAGL,4BACEe,KAAK,SACLS,QAAU,kBAAM7B,EAAQhB,KAAR,mBAAyBP,EAAE4C,OAE3C,yBACE0B,IAAMtE,EAAEiL,MACRxG,IAAMzE,EAAE4B,KACRsB,MAAQ,CAAEoJ,MAAO,OAAQC,OAAQ,QACjCzJ,cAAA,UAAiBxC,EAAjB,wBAIJ,wBAAIwC,cAAA,UAAiBxC,EAAjB,yBAAJ,UACMN,EAAE6K,KADR,cACkB7K,EAAE+K,WAEpB,4BACEpI,KAAK,SACLG,cAAA,UAAiBxC,EAAjB,yBACAgE,IAAMkI,IACNpJ,QAAU,WACR,IAAMwG,EAAG,WAAO5J,EAAE2C,KAAT,aAAkB3C,EAAE4C,IAE7B8G,EAAmBC,EAAmBC,KAGxC,yBAAKnF,IAAI,QAAQH,IAAMkI,OAEzB,2BACGH,EAAiB,gBAAkB,IAGtC,4BACE1J,KAAK,SACLG,cAAA,UAAiBxC,EAAjB,4BACAgE,IAAMkJ,KACNpK,QAAU,WACR8I,EAAiBlM,EAAE4C,IACnBsK,GAAaD,KAIf,yBACExI,IAAI,WACJH,IAAMkJ,SAiEHC,CAAWzN,EAAGM,GAGV,WAATqC,EA9Dc,SAAC3C,EAAGM,GAAJ,OAClB,yBAAK2F,IAAMjG,EAAE4C,IACX,4BACED,KAAK,SACLS,QAAU,kBAAM7B,EAAQhB,KAAR,mBAAyBP,EAAE4C,OAE3C,wBAAIE,cAAA,UAAiBxC,EAAjB,qBACDN,EAAE4B,MAGL,yBACE0C,IAAMtE,EAAEiL,MACRxG,IAAMzE,EAAE4B,KACRsB,MAAQ,CAAEoJ,MAAO,OAAQC,OAAQ,QACjCzJ,cAAA,UAAiBxC,EAAjB,wBAIJ,wBAAIwC,cAAA,UAAiBxC,EAAjB,yBAAgDN,EAAEgL,gBAEtD,4BACErI,KAAK,SACLG,cAAA,UAAiBxC,EAAjB,yBACAgE,IAAMkI,IACNpJ,QAAU,WACR,IAAMwG,EAAMrI,EAAQG,SAASD,SAC7BiI,EAAmBC,EAAmBC,KAIxC,yBACEnF,IAAI,QACJH,IAAMkI,OAGV,2BACGH,EAAiB,gBAAkB,IAGtC,4BACE1J,KAAK,SACLG,cAAA,UAAiBxC,EAAjB,4BACAgE,IAAMkJ,KACNpK,QAAU,WACR8I,EAAiBlM,EAAE4C,IACnBsK,GAAaD,KAIf,yBACExI,IAAI,WACJH,IAAMkJ,SAYHE,CAAY1N,EAAGM,QADxB,GAKIqN,EAAkB,SAACC,GAAD,OACtB,6BAEKA,EAKC,6BACGA,EAAiB7N,KAAI,SAACC,EAAGM,GAAJ,OACpB,yBAAK2F,IAAMjG,EAAE4C,IACX,6BACG2K,EAAgBvN,EAAGA,EAAE2C,KAAMrC,SARpC,uCAkBFuN,EAAuB,SAAC,EAAYC,GAAW,IAArBrL,EAAoB,EAApBA,OAC9B,GAAqB,SAAjBA,EAAOC,MAAkB,CAC3B,IAAMqL,EAASD,EAAMnO,QAAO,SAACK,GAAD,MAAkB,WAAXA,EAAE2C,QACrC2K,EAAmBS,OACd,IAAqB,UAAjBtL,EAAOC,MAAmB,CACnC,IAAMqL,EAASD,EAAMnO,QAAO,SAACK,GAAD,MAAkB,WAAXA,EAAE2C,QAErC,OADA2K,EAAmBS,GACZA,EAEPT,EAAmBQ,KAIvB,OACE,6BACE,kBAAC,EAAD,CAAQjJ,SAAS,uBAChBwI,EAAgBnL,OAAS,EACxByL,EAAgBN,GAEhBM,EAAgBrD,GAGlB,6BACE,4BACExH,cAAY,qBACZH,KAAK,SACLD,MAAM,OACNU,QAAU,SAACpD,GACT6N,EAAqB7N,EAAGsK,GACxB8C,GAAqBD,KANzB,QAWA,4BACErK,cAAY,sBACZH,KAAK,SACLD,MAAM,QACNU,QAAU,SAACpD,GACT6N,EAAqB7N,EAAGsK,GACxB8C,GAAqBD,KANzB,SAWA,4BACErK,cAAY,oBACZH,KAAK,SACLD,MAAM,MACNU,QAAU,SAACpD,GACT6N,EAAqB7N,EAAGsK,GACxB8C,GAAqBD,KANzB,UC9HOa,OA9Ef,WAAiC,IAAD,EACN9M,mBAAS,IADH,mBACvB2J,EADuB,KACjBoD,EADiB,OAEY/M,mBAAS,IAFrB,mBAEvBgN,EAFuB,KAERC,EAFQ,OAGOjN,oBAAS,GAHhB,mBAGvBkN,EAHuB,KAGTC,EAHS,KAIxB9M,EAAUC,cAEVmE,EAAU,uCAAG,4BAAAxI,EAAA,sEACSQ,cADT,OACXP,EADW,OAEjB6Q,EAAQ7Q,EAAYuE,OAFH,2CAAH,qDAKV2M,EAAa,uCAAG,WAAO5L,GAAP,qBAAAvF,EAAA,yDACN,QAAVuF,EADgB,gCAEQvE,cAFR,cAEZf,EAFY,OAGZmR,EAAgBnR,EAAYuE,MAC/BhC,QAAO,SAAC6O,EAAYlO,GAAb,OAAuBA,GAjBnB,IAiB2CkO,KAJvC,kBAKXL,EAAiBI,IALN,uBAOMnP,YAAYsD,GAPlB,OAOdtF,EAPc,OAQdmR,EAAgBnR,EAAYuE,MAC/BhC,QAAO,SAAC6G,EAAQlG,GAAT,OAAmBA,GAtBb,IAsBqCkG,KACrD2H,EAAiBI,GACjBF,GAAa,GAXO,4CAAH,sDAmBnB,OALAzI,qBAAU,WACRD,IACA2I,EAAc,cACb,IAGD,6BACE,kBAAC,EAAD,CAAQzJ,SAAS,oBACjB,6BACE,4BACE3B,MAAQ,CAAEuL,QAAS,SACnB3L,cAAY,2BACZC,SAAW,gBAAGN,EAAH,EAAGA,OAAH,OAAgB6L,EAAc7L,EAAOC,SAE/C0L,EACC,4BAAQtL,cAAY,cAApB,OACE,KACH+H,EAAK9K,KAAI,SAACyG,EAAQlG,GAAT,OACR,4BACEwC,cAAA,UAAiB0D,EAAOsE,QAAxB,WACA7E,IAAM3F,GAELkG,EAAOsE,aAIboD,EAAcnO,KAAI,SAACyG,EAAQlG,GAAT,OACjB,4BACE4C,MAAQ,CAAEuL,QAAS,SACnB9L,KAAK,SACLsD,IAAMO,EAAO3H,OACbiE,cAAA,UAAiBxC,EAAjB,gBACA8C,QAAU,kBAAM7B,EAAQhB,KAAR,mBAAyBiG,EAAO3H,WAEhD,6BACE,yBACEqE,MAAQ,CAAEoJ,MAAO,OAAQC,OAAQ,QACjCjI,IAAMkC,EAAOC,aACbhC,IAAI,OACJ3B,cAAA,UAAiBxC,EAAjB,eAEF,uBAAGwC,cAAA,UAAiBxC,EAAjB,eACCkG,EAAOE,eAMnB,kBAAC,EAAD,QCnDSgI,OAzBf,WACE,IAAMnN,EAAUC,cAEhB,OACE,6BACE,kBAAC,EAAD,CAAQqD,SAAS,aACjB,4BACElC,KAAK,SACLG,cAAY,eACZM,QAAU,kBAAM7B,EAAQhB,KAAK,uBAH/B,oBAOA,4BACEoC,KAAK,SACLG,cAAY,iBACZM,QAAU,kBAAM7B,EAAQhB,KAAK,uBAH/B,oBAOA,kBAAC,EAAD,QC6CSoO,OAlEf,YAA4C,IAAbC,EAAY,EAAZA,SAAY,EACL1N,mBAAS,IADJ,mBAClCiF,EADkC,KACtBnF,EADsB,OAEHE,mBAAS,IAFN,mBAElCwG,EAFkC,KAErBzG,EAFqB,OAGCC,mBAAS,IAHV,mBAGlCkE,EAHkC,KAGnBC,EAHmB,OAIGnE,mBAAS,IAJZ,mBAIlCgG,EAJkC,KAIlBE,EAJkB,OAKSlG,mBAAS,IALlB,mBAKlCkF,EALkC,KAKVd,EALU,OAMUpE,mBAAS,IANnB,mBAMlCyG,EANkC,KAMVR,EANU,OAOOjG,oBAAS,GAPhB,mBAOlCsE,EAPkC,KAObD,EAPa,OAQDrE,mBAAS,IARR,mBAQlCuE,EARkC,KAQpBC,EARoB,OASCxE,mBAAS,IATV,mBASlCmG,EATkC,KASnBC,EATmB,OAUCpG,mBAAS,IAVV,mBAUlC2N,EAVkC,KAUnBC,EAVmB,OAWD5N,mBAAS,IAXR,mBAWlCuK,EAXkC,KAWpBsD,EAXoB,OAYG7N,mBAAS,IAZZ,mBAYlCsK,EAZkC,KAYlBwD,EAZkB,QAaG9N,oBAAS,GAbZ,qBAalCmL,GAbkC,MAalB1C,GAbkB,SAcAzI,oBAAS,GAdT,qBAclC+N,GAdkC,MAclBC,GAdkB,SAeEhO,oBAAS,GAfX,qBAelCiO,GAfkC,MAelBC,GAfkB,SAgBalO,mBAAS,IAhBtB,qBAkBnCmO,GAAe,CACnBlJ,aACAnF,gBACA0G,cACAzG,iBACAmE,gBACAC,mBACA6B,iBACAE,oBACAhB,yBACAd,kBACAqC,yBACAR,mBACA3B,sBACAD,mBACAE,eACAC,kBACA2B,gBACAC,mBACAuH,gBACAC,mBACArD,eACAsD,kBACAvD,iBACAwD,oBACA3C,kBACA1C,qBACAsF,kBACAC,kBACAC,kBACAC,oBACA/I,qBAjDuC,MAkDvCC,sBAlDuC,OAqDzC,OACE,kBAAC,IAAagJ,SAAd,CACE5M,MAAQ2M,IAEPT,ICnDQW,OARf,WACE,OACE,2C,mCCmLWC,OAlKf,WAA4B,IAAD,EAKDzO,qBAAWN,KAHjC+K,EAFuB,EAEvBA,eACAwD,EAHuB,EAGvBA,kBACA3C,EAJuB,EAIvBA,eACA1C,EALuB,EAKvBA,kBALuB,EAMezI,mBAAS,IANxB,mBAMlBuK,EANkB,KAMJsD,EANI,OAOuB7N,oBAAS,GAPhC,mBAOlBuO,EAPkB,KAOArE,EAPA,OAQ0BlK,oBAAS,GARnC,mBAQlBwO,EARkB,KAQKhE,EARL,KASnBnK,EAAUC,cACRoB,EAAO+M,cAAP/M,GAEFgN,EAAQ,uCAAG,4BAAAzS,EAAA,sEACWyB,YAAYgE,GADvB,OACTxF,EADS,OAEf2R,EAAgB3R,EAAYuE,MAAM,IAFnB,2CAAH,qDA6Cd,OAxCAiE,qBAAU,WACR,IAAMiK,EAAc/L,aAAaoF,QAAQ,eACnC4G,EAAmB9L,KAAK+C,MAAM8I,GAC/BC,EAGHf,EAAgBe,GAFhBF,MAID,IAEHhK,qBAAU,WACR,IAAMqD,EAASnF,aAAaoF,QAAQ,qBAC9BC,EAAyBnF,KAAK+C,MAAMkC,GAC1C,GAAKE,EASE,CACL,IAAM4G,EAAqB5G,EAAuBxH,MAAMiB,GACnDmN,GAAoD,IAA9BA,EAAmB7N,SAC5CiH,EAAuBxH,MAAMiB,GAAM,IAErCoM,EAAkB7F,GAClBrF,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUkF,QAf9B,CAC3B,IAAM6G,EAAoB,CACxBC,UAAW,GACXtO,MAAM,gBACHiB,EAAK,KAGVoM,EAAkBgB,GAClBlM,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAU+L,OAS1D,IAEHpK,qBAAU,WACRuF,EAAaC,EAAqBxI,KACjC,IAEHgD,qBAAU,WACR2F,EAAuBC,EAAgBjK,EAASkK,EAAcC,KAC7D,CAACF,IAGF,yBAAK3I,UAAU,4BACb,yBAAKA,UAAU,wBACb,4BACEF,KAAK,SACLkB,UAAQ,EACRf,cAAY,kBACZF,GAAG,uBACHC,UAAU,qDAER4I,EAAazF,aAEjB,yBAAKnD,UAAU,qBACb,wBAAIC,cAAY,gBAAiB2I,EAAa/E,SAC9C,yBACE7D,UAAU,eACVyB,IAAMmH,EAAahF,aACnBhC,IAAMgH,EAAa/E,QACnB5D,cAAY,iBAEd,yBAAKD,UAAU,yBACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,OACVC,cAAY,YACZM,QAAU,WACR,IAAMwG,EAAMrI,EAAQG,SAASD,SAC7BiI,EAAmBC,EAAmBC,KAGxC,yBAAK/G,UAAU,aAAayB,IAAMkI,IAAY/H,IAAI,WAEnD4H,EAAiB,gBAAkB,GACpC,yBACExJ,UAAU,OACVC,cAAY,eACZwB,IAAMmL,EAAmB,iBAAmB,iBAC5CrM,QAAU,WACRiH,EAA4BoB,EAAc,UAC1CL,GAAqBqE,KAGtBA,EACC,yBAAK5M,UAAU,gBAAgByB,IAAMkJ,KAAiB/I,IAAI,iBAEvD,yBAAK5B,UAAU,gBAAgByB,IAAM4L,KAAiBzL,IAAI,gBAGnE,wBAAI7B,GAAG,kBAAP,gBACA,yBAAKC,UAAU,oBAEXvD,YAAkCmM,GAAc1L,KAAI,SAACD,EAAYQ,GAAb,OAClD,yBACE2F,IAAM3F,EACNwC,cAAA,UAAiBxC,EAAjB,oBACAuC,UAAU,mBAEV,2BACEI,QAAUnD,EAAW,GACrBoD,MAAQ,CAAEiN,SAAU,WAEpB,2BACExN,KAAK,WACLyN,QAAU7G,EAAkBzJ,EAAY8C,EAAI4I,EAAgB,SAC5D5I,GAAK9C,EAAW,GAChB8B,KAAO9B,EAAW,GAClBiD,SAAW,YAAiB,IAAdN,EAAa,EAAbA,OACZoG,EAAsB,QAASjG,EAAIH,EAAOb,MAC1C,IAAMyO,EAAoBvM,aAAaoF,QAAQ,qBACzCoH,EAActM,KAAK+C,MAAMsJ,GAC/BrB,EAAkBsB,MAbxB,OAiBE,0BAAMzN,UAAU,mBAAhB,UACM/C,EAAW,GADjB,cACyBA,EAAW,aASlD,yBAAK+C,UAAU,0BACb,4CACA,uBAAGC,cAAY,gBAAgB2I,EAAa8E,kBAE9C,4BACE1N,UAAU,+EACVC,cAAY,oBACZH,KAAK,SACLkB,SAAW6L,EACXtM,QAAU,WACR7B,EAAQhB,KAAK,oBACbqL,EAAwBH,EAAc,YAP1C,wBCkBO+E,OAnKf,WAA6B,IAAD,EAMtBzP,qBAAWN,KAJb+K,EAFwB,EAExBA,eACAwD,EAHwB,EAGxBA,kBACA3C,EAJwB,EAIxBA,eACA1C,EALwB,EAKxBA,kBALwB,EAOgBzI,mBAAS,IAPzB,mBAOnB2N,EAPmB,KAOJC,EAPI,OAQsB5N,oBAAS,GAR/B,mBAQnBuO,EARmB,KAQDrE,EARC,OASyBlK,oBAAS,GATlC,mBASnBwO,EATmB,KASIhE,EATJ,KAUpBnK,EAAUC,cACRoB,EAAO+M,cAAP/M,GAEFgN,EAAQ,uCAAG,4BAAAzS,EAAA,sEACW2B,YAAa8D,GADxB,OACTxF,EADS,OAEf0R,EAAiB1R,EAAY0E,OAAO,IAFrB,2CAAH,qDA6Cd,OAxCA8D,qBAAU,WACR,IAAM6K,EAAe3M,aAAaoF,QAAQ,gBACpCwH,EAAoB1M,KAAK+C,MAAM0J,GAChCC,EAGH5B,EAAiB4B,GAFjBd,MAID,IAEHhK,qBAAU,WACR,IAAMqD,EAASnF,aAAaoF,QAAQ,qBAC9BC,EAAyBnF,KAAK+C,MAAMkC,GAC1C,GAAKE,EASE,CACL,IAAM4G,EAAqB5G,EAAuB8G,UAAUrN,GACvDmN,GAAoD,IAA9BA,EAAmB7N,SAC5CiH,EAAuB8G,UAAUrN,GAAM,IAEzCoM,EAAkB7F,GAClBrF,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUkF,QAf9B,CAC3B,IAAM6G,EAAoB,CACxBC,UAAU,gBACPrN,EAAK,IAERjB,MAAO,IAETqN,EAAkBgB,GAClBlM,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAU+L,OAS1D,IAEHpK,qBAAU,WACRuF,EAAaC,EAAqBxI,KACjC,IAEHgD,qBAAU,WACR2F,EAAuBC,EAAgBjK,EAASsN,EAAenD,KAC9D,CAACF,IAGF,yBAAK3I,UAAU,4BACb,yBAAKA,UAAU,wBACb,4BACEF,KAAK,SACLkB,UAAQ,EACRf,cAAY,kBACZF,GAAG,uBACHC,UAAU,qDAERgM,EAAc7I,aAElB,yBAAKnD,UAAU,qBACb,wBAAIC,cAAY,gBAAiB+L,EAAchH,UAC/C,yBACEhF,UAAU,eACVyB,IAAMuK,EAAcjH,cACpBnD,IAAMoK,EAAchH,SACpB/E,cAAY,iBAEd,yBAAKD,UAAU,yBACb,yBAAKA,UAAU,kBACb,yBACEA,UAAU,OACVC,cAAY,YACZM,QAAU,WACR,IAAMwG,EAAMrI,EAAQG,SAASD,SAC7BiI,EAAmBC,EAAmBC,KAGxC,yBAAK/G,UAAU,aAAayB,IAAMkI,IAAY/H,IAAI,WAEnD4H,EAAiB,gBAAkB,GACpC,yBACExJ,UAAU,OACVC,cAAY,eACZwB,IAAMmL,EAAmB,iBAAmB,iBAC5CrM,QAAU,WACRiH,EAA4BwE,EAAe,UAC3CzD,GAAqBqE,KAGtBA,EACC,yBAAK5M,UAAU,gBAAgByB,IAAMkJ,KAAiB/I,IAAI,iBAEvD,yBAAK5B,UAAU,gBAAgByB,IAAM4L,KAAiBzL,IAAI,gBAGnE,wBAAI7B,GAAG,kBAAP,gBACA,yBAAKC,UAAU,oBAEXvD,YAAkCuP,GAAe9O,KAAI,SAACD,EAAYQ,GAAb,OACnD,yBACE2F,IAAM3F,EACNwC,cAAA,UAAiBxC,EAAjB,oBACAuC,UAAU,mBAEV,2BACEI,QAAUnD,EAAW,GACrBoD,MAAQ,CAAEiN,SAAU,WAEpB,2BACExN,KAAK,WACLyN,QAAU7G,EAAkBzJ,EAAY8C,EAAI4I,EAAgB,aAC5D5I,GAAK9C,EAAW,GAChB8B,KAAO9B,EAAW,GAClBiD,SAAW,YAAiB,IAAdN,EAAa,EAAbA,OACZoG,EAAsB,YAAajG,EAAIH,EAAOb,MAC9C,IAAMyO,EAAoBvM,aAAaoF,QAAQ,qBACzCoH,EAActM,KAAK+C,MAAMsJ,GAC/BrB,EAAkBsB,MAbxB,OAiBE,0BAAMzN,UAAU,mBAAhB,UACM/C,EAAW,GADjB,cACyBA,EAAW,aASlD,yBAAK+C,UAAU,0BACb,4CACA,uBAAGC,cAAY,gBAAgB+L,EAAc0B,kBAE/C,4BACE1N,UAAU,+EACVC,cAAY,oBACZH,KAAK,SACLkB,SAAW6L,EACXtM,QAAU,WACR7B,EAAQhB,KAAK,oBACbqL,EAAwBiD,EAAe,YAP3C,wB,8CCvEO8B,OAvFf,WAA0B,IAAD,EACKzP,mBAAS,IADd,mBAChBY,EADgB,KACR8O,EADQ,OAEC1P,mBAAS,GAFV,mBAEhB2P,EAFgB,KAEVC,EAFU,KAIjBnL,EAAU,uCAAG,8BAAAxI,EAAA,sEACSiB,cADT,OACXhB,EADW,OAEX2T,EAAiB3T,EAAY0E,OAChCnC,QAAO,SAACgJ,EAAOrI,GAAR,OAAkBA,GATb,IASoCqI,KACnDiI,EAAUG,GAJO,2CAAH,qDAOhBnL,qBAAU,WACRD,MACC,IAEH,IAAMqL,EAAgB,SAACpP,GACrB,IACMqP,EAAyBJ,EADnB,EAENK,EAAqBL,EAFf,EAGNM,EAAYrP,EAAOI,OACzB,GAAa,SAATN,EACF,OACSkP,EADLI,IAAsBC,EACT,EAEFD,GAEjB,GAAa,aAATtP,EAAqB,CAGvB,OACSkP,EADLD,GAFc,OACI,GAIPI,KAInB,OACE,yBAAKpO,UAAU,sBACb,4BACEA,UAAU,mBACVF,KAAK,SACLf,KAAK,WACLwB,QAAU,gBAAGX,EAAH,EAAGA,OAAH,OAAgBuO,EAAcvO,EAAOb,QAE9C,KAEH,yBAAKiB,UAAU,0BACZf,EAAO/B,KAAI,SAAC4I,EAAOrI,GAClB,OAAIA,IAAUuQ,GAAQvQ,IAAUuQ,EAAO,EAEnC,yBACEhO,UAAU,mBACVoD,IAAM3F,EACN4C,MAAQ,CAAEqJ,OAAQ,OAAQD,MAAO,QACjChI,IAAMqE,EAAMf,cACZhG,KAAO+G,EAAM5J,QACb0F,IAAI,QACJ3B,cAAA,UAAiBxC,EAAjB,yBAKJ,yBACEuC,UAAU,mBACVoD,IAAM3F,EACN4C,MAAQ,CAAEqJ,OAAQ,OAAQD,MAAO,QACjChI,IAAMqE,EAAMf,cACZhG,KAAO+G,EAAM5J,QACb0F,IAAI,QACJ3B,cAAA,UAAiBxC,EAAjB,uBACA8C,QAAU,kBAAM7B,QAAQhB,KAAR,mBAAyBoI,EAAM5J,iBAKvD,4BACE8D,UAAU,eACVF,KAAK,SACLf,KAAK,OACLwB,QAAU,gBAAGX,EAAH,EAAGA,OAAH,OAAgBuO,EAAcvO,EAAOb,QAE9C,O,MCkGMwP,OAxKf,WAA8B,IACpBxO,EAAO+M,cAAP/M,GACFrB,EAAUC,cAFW,EAYvBT,qBAAWN,KARbgL,EAJyB,EAIzBA,aACAsD,EALyB,EAKzBA,gBACA1C,EANyB,EAMzBA,eACA1C,EAPyB,EAOzBA,kBACAsF,EARyB,EAQzBA,eACAC,EATyB,EASzBA,eACAC,EAVyB,EAUzBA,eACAC,EAXyB,EAWzBA,iBAXyB,EAaqBlO,oBAAS,GAb9B,mBAapBuO,EAboB,KAaFrE,EAbE,KAerBwE,EAAQ,uCAAG,4BAAAzS,EAAA,sEACWyB,YAAYgE,GADvB,OACTxF,EADS,OAEf2R,EAAgB3R,EAAYuE,MAAM,IAClCmC,aAAaC,QAAQ,cAAeC,KAAKC,UAAU7G,EAAYuE,MAAM,KAHtD,2CAAH,qDA4Bd,OAtBAiE,qBAAU,WACRgK,MACC,IAEHhK,qBAAU,WACR,GAAIsE,EAA2B,eAAgB,CAC7C,IACMmH,EADcrN,KAAK+C,MAAMjD,aAAaoF,QAAQ,gBACdO,MAAK,SAACjD,GAAD,OAAYA,EAAO5D,KAAOA,KACrEsM,GAAgBmC,GAElB,GAAInH,EAA2B,qBAAsB,CACnD,IAAM8F,EAAoBhM,KAAK+C,MAAMjD,aAAaoF,QAAQ,sBACpDoI,EAAgB7R,OAAO8R,KAAKvB,EAAkBrO,OACjD8H,MAAK,SAACV,GAAD,OAAcA,IAAanG,KACnCwM,EAAiBkC,MAElB,IAEH1L,qBAAU,WACRuF,EAAaC,EAAqBxI,KACjC,IAGD,yBAAKC,UAAU,yBAEb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,+BACb,wBACEA,UAAU,eACVC,cAAY,gBAEV2I,EAAa/E,SAEjB,wBAAI9D,GAAG,eAAP,gBACA,wBAAIC,UAAU,MAEVvD,YAAkCmM,GAAc1L,KAAI,SAACC,EAAGM,GAAJ,OAClD,wBACE2F,IAAM3F,EACNwC,cAAA,UAAiBxC,EAAjB,iCAFF,UAIMN,EAAE,GAJR,cAIgBA,EAAE,UAM1B,yBAAK6C,UAAU,iBACb,yBACEA,UAAU,aACVyB,IAAMmH,EAAahF,aACnBhC,IAAMgH,EAAahF,aACnB3D,cAAY,mBAIlB,yBAAKD,UAAU,kBACb,yBACEA,UAAU,OACVC,cAAY,YACZM,QAAU,WACR,IAAMwG,EAAMrI,EAAQG,SAASD,SAC7BiI,EAAmBC,EAAmBC,KAGvCyC,EACG,wDAEA,yBAAKxJ,UAAU,aAAayB,IAAMkI,IAAY/H,IAAI,WAGxD,yBACE5B,UAAU,OACVC,cAAY,eACZwB,IAAMmL,EAAmB,iBAAmB,iBAC5CrM,QAAU,WACRiH,EAA4BoB,EAAc,UAC1CL,GAAqBqE,KAGtBA,EACC,yBAAK5M,UAAU,gBAAgByB,IAAMkJ,KAAiB/I,IAAI,eAGxD,yBACE5B,UAAU,gBACVyB,IAAM4L,KACNzL,IAAI,eAId,yBAAK5B,UAAU,qBACb,4BACEC,cAAY,kBACZH,KAAK,SACLkB,UAAQ,EACRhB,UAAU,qDAJZ,mBAMgB4I,EAAazF,cAE7B,6BACE,8CACA,uBAAGlD,cAAY,gBAAgB2I,EAAa8E,kBAE9C,yBAAK1N,UAAU,mBACX4I,EAAa+F,WASX,kBAAC,KAAD,CACE1O,cAAY,QACZ2O,IAAMhG,EAAa+F,aATrB,yBACE3O,UAAU,YACVyB,IAAMoN,KACNjN,IAAI,uBASZ,yBAAK5B,UAAU,2BACb,wBACEA,UAAU,sBADZ,uBAMF,kBAAC,GAAD,MACA,yBAAKA,UAAU,6BACXoM,EACA,4BACEnM,cAAY,mBACZD,UAAU,qDACVF,KAAK,SACLS,QAAU,kBAAM7B,EAAQhB,KAAR,mBAAyBqC,EAAzB,mBAEfuM,EAAiB,kBAAoB,gBAEtC,QAIV,kBAAC,EAAD,Q,SC1ISwC,OAlCf,WAAyB,IAAD,EACIzQ,mBAAS,IADb,mBACfS,EADe,KACR+K,EADQ,KAEhBnL,EAAUC,cAEVmE,EAAU,uCAAG,8BAAAxI,EAAA,sEACSgB,cADT,OACXf,EADW,OAEX2T,EAAiB3T,EAAYuE,MAChChC,QAAO,SAAC2I,EAAMhI,GAAP,OAAiBA,GATb,IASmCgI,KACjDoE,EAASqE,GAJQ,2CAAH,qDAWhB,OAJAnL,qBAAU,WACRD,MACC,IAGD,yBAAK9C,UAAU,0BACb,kBAAC+O,GAAA,EAAD,KACGjQ,EAAM5B,KAAI,SAACuI,EAAMhI,GAAP,OACT,kBAACsR,GAAA,EAASC,KAAV,CAAe5L,IAAM3F,GACnB,yBACEuC,UAAU,6BACVyB,IAAMgE,EAAK7B,aACXhC,IAAI,OACJqN,eAAA,UAAkBxR,EAAlB,uBACA8C,QAAU,kBAAM7B,EAAQhB,KAAR,mBAAyB+H,EAAKzJ,mBC2J7CkT,OAzKf,WACE,IAAMxQ,EAAUC,cADY,EAWxBT,qBAAWN,KARboO,EAH0B,EAG1BA,cACAC,EAJ0B,EAI1BA,iBACAzC,EAL0B,EAK1BA,eACA1C,EAN0B,EAM1BA,kBACAsF,EAP0B,EAO1BA,eACAC,EAR0B,EAQ1BA,eACAC,EAT0B,EAS1BA,eACAC,EAV0B,EAU1BA,iBAEMxM,EAAO+M,cAAP/M,GAZoB,EAaoB1B,oBAAS,GAb7B,mBAarBuO,EAbqB,KAaHrE,EAbG,KAetBwE,EAAQ,uCAAG,4BAAAzS,EAAA,sEACW2B,YAAa8D,GADxB,OACTxF,EADS,OAEf0R,EAAiB1R,EAAY0E,OAAO,IACpCgC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAU7G,EAAY0E,OAAO,KAHxD,2CAAH,qDA4Bd,OAtBA8D,qBAAU,WACRgK,MACC,IAEHhK,qBAAU,WACR,GAAIsE,EAA2B,eAAgB,CAC7C,IACMmH,EADcrN,KAAK+C,MAAMjD,aAAaoF,QAAQ,gBACdO,MAAK,SAACjD,GAAD,OAAYA,EAAO5D,KAAOA,KACrEsM,GAAgBmC,GAElB,GAAInH,EAA2B,qBAAsB,CACnD,IAAM8F,EAAoBhM,KAAK+C,MAAMjD,aAAaoF,QAAQ,sBACpDoI,EAAgB7R,OAAO8R,KAAKvB,EAAkBC,WACjDxG,MAAK,SAACV,GAAD,OAAcA,IAAanG,KACnCwM,EAAiBkC,OAIrB1L,qBAAU,WACRuF,EAAaC,EAAqBxI,KACjC,IAGD,yBAAKC,UAAU,yBAEb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,+BACb,wBACEA,UAAU,eACVC,cAAY,gBAEV+L,EAAchH,UAElB,wBAAIjF,GAAG,eAAP,gBACA,wBAAIC,UAAU,MAEVvD,YAAkCuP,GAAe9O,KAAI,SAACC,EAAGM,GAAJ,OACnD,wBACE2F,IAAM3F,EACNwC,cAAA,UAAiBxC,EAAjB,iCAFF,UAIMN,EAAE,GAJR,cAIgBA,EAAE,UAM1B,yBAAK6C,UAAU,iBACb,yBACEA,UAAU,aACVyB,IAAMuK,EAAcjH,cACpBnD,IAAMoK,EAAcmD,SACpBlP,cAAY,mBAIlB,yBAAKD,UAAU,kBACb,yBACEA,UAAU,OACVC,cAAY,YACZM,QAAU,WACR,IAAMwG,EAAMrI,EAAQG,SAASD,SAC7BiI,EAAmBC,EAAmBC,KAGvCyC,EACG,wDAEA,yBAAKxJ,UAAU,aAAayB,IAAMkI,IAAY/H,IAAI,WAGxD,yBACE5B,UAAU,OACVC,cAAY,eACZwB,IAAMmL,EAAmB,iBAAmB,iBAC5CrM,QAAU,WACRiH,EAA4BwE,EAAe,UAC3CzD,GAAqBqE,KAGtBA,EACC,yBAAK5M,UAAU,gBAAgByB,IAAMkJ,KAAiB/I,IAAI,eAGxD,yBACE5B,UAAU,gBACVyB,IAAM4L,KACNzL,IAAI,eAId,yBAAK5B,UAAU,qBACb,4BACEC,cAAY,kBACZH,KAAK,SACLkB,UAAQ,EAERhB,UAAU,qDALZ,mBAOgBgM,EAAc7I,YAP9B,cAO+C6I,EAAc3D,eAE7D,6BACE,8CACA,uBAAGpI,cAAY,gBAAgB+L,EAAc0B,kBAE/C,yBAAK1N,UAAU,mBACXgM,EAAc2C,WASZ,kBAAC,KAAD,CACE1O,cAAY,QACZ2O,IAAM5C,EAAc2C,aATtB,yBACE3O,UAAU,YACVyB,IAAMoN,KACNjN,IAAI,uBASZ,yBAAK5B,UAAU,2BACb,wBACEA,UAAU,qBADZ,sBAMF,kBAAC,GAAD,MACA,yBAAKA,UAAU,6BACXoM,EACA,4BACEnM,cAAY,mBACZD,UAAU,qDACVF,KAAK,SACLS,QAAU,kBAAM7B,EAAQhB,KAAR,mBAAyBqC,EAAzB,mBAEfuM,EAAiB,kBAAoB,gBAEtC,QAIV,kBAAC,EAAD,QCzHS8C,OA1Cf,WACE,OACE,yBAAKpP,UAAU,iBACb,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqP,OAAK,EAACC,KAAK,IAAIC,UAAY/O,IAClC,kBAAC,IAAD,CAAO6O,OAAK,EAACC,KAAK,WAAWC,UAAYlM,IACzC,kBAAC,IAAD,CAAOgM,OAAK,EAACC,KAAK,WAAWC,UAAY3K,IACzC,kBAAC,IAAD,CAAOyK,OAAK,EAACC,KAAK,eAAeC,UAAYhB,KAC7C,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,eAAeC,UAAYL,KAC7C,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,2BAA2BC,UAAY5C,KACzD,kBAAC,IAAD,CAAO0C,OAAK,EAACC,KAAK,2BAA2BC,UAAY5B,KACzD,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,YAAYC,UAAY1D,KAC1C,kBAAC,IAAD,CAAOwD,OAAK,EAACC,KAAK,oBAAoBC,UAAYtK,IAClD,kBAAC,IAAD,CAAOoK,OAAK,EAACC,KAAK,oBAAoBC,UAAYpK,IAClD,kBAAC,IAAD,CACEkK,OAAK,EACLC,KAAK,iCACLC,UAAYlK,IAEd,kBAAC,IAAD,CACEgK,OAAK,EACLC,KAAK,iCACLC,UAAY1J,IAEd,kBAAC,IAAD,CACEwJ,OAAK,EACLC,KAAK,yBACLC,UAAYpE,KAEd,kBAAC,IAAD,CAAOkE,OAAK,EAACC,KAAK,UAAUC,UAAYzL,IACxC,kBAAC,IAAD,CAAOuL,OAAK,EAACC,KAAK,mBAAmBC,UAAY3F,IACjD,kBAAC,IAAD,CAAOyF,OAAK,EAACC,KAAK,sBAAsBC,UAAYpF,KACpD,kBAAC,IAAD,CAAOmF,KAAK,IAAIC,UAAY7C,UC7CpB8C,QACW,cAA7BC,OAAO5Q,SAAS6Q,UAEe,UAA7BD,OAAO5Q,SAAS6Q,UAEhBD,OAAO5Q,SAAS6Q,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,GAAD,MACAC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzV,MAAK,SAAA0V,GACjCA,EAAaC,kB","file":"static/js/main.7c15cc21.chunk.js","sourcesContent":["export const fetchMealsIngredients = async (ingredientes) => {\n  const responseAPI = fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?i=${ingredientes}`)\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchMealsName = (nome) => {\n  const responseAPI = fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${nome}`)\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchMealsArea = () => {\n  const responseAPI = fetch('https://www.themealdb.com/api/json/v1/1/list.php?a=list')\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchMealIngredients = () => {\n  const responseAPI = fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list')\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchDrinkIngredients = () => {\n  const responseAPI = fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list')\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchMealsFirstLetter = (primeiraLetra) => {\n  const responseAPI = fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${primeiraLetra}`)\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchDrinksIngredients = (ingredientes) => {\n  const responseAPI = fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingredientes}`)\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchDrinksName = (nome) => {\n  const responseAPI = fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${nome}`)\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchDrinksFirstLetter = (primeiraLetra) => {\n  const responseAPI = fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?f=${primeiraLetra}`)\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchMeals = () => {\n  const responseAPI = fetch('https://www.themealdb.com/api/json/v1/1/search.php?s=')\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchDrinks = () => {\n  const responseAPI = fetch('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=')\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchCategoriesMeals = async () => {\n  const responseAPI = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list')\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchCategoriesDrinks = async () => {\n  const responseAPI = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list')\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchByMealCategory = (categoryName) => {\n  const responseAPI = fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${categoryName}`)\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchByDrinkCategory = (categoryName) => {\n  const responseAPI = fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${categoryName}`)\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchMealsRandom = () => {\n  const responseAPI = fetch('https://www.themealdb.com/api/json/v1/1/random.php')\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchDrinksRandom = () => {\n  const responseAPI = fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php')\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchMealId = (idMeal) => {\n  const responseAPI = fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${idMeal}`)\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchDrinkId = (idDrink) => {\n  const responseAPI = fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idDrink}`)\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchDrinksByIngredient = (drinkName) => {\n  const URL = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=';\n  const responseAPI = fetch(`${URL}${drinkName}`)\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchMealsByIngredient = (mealName) => {\n  const URL = 'https://www.themealdb.com/api/json/v1/1/filter.php?i=';\n  const responseAPI = fetch(`${URL}${mealName}`)\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const fetchByArea = (areaName) => {\n  const URL = 'https://www.themealdb.com/api/json/v1/1/filter.php?a=';\n  const responseAPI = fetch(`${URL}${areaName}`)\n    .then((response) => response.json());\n  return responseAPI;\n};\n\nexport const arrayOfIngredientsAndMeasurements = (selectedRecipe) => {\n  const ingredientsArray = Object.entries(selectedRecipe)\n    .filter((keyName) => keyName[0].includes('strIngredient'))\n    .filter((ingredient) => !ingredient.includes(null))\n    .filter((ingredient) => !ingredient.includes(''))\n    .filter((ingredient) => !ingredient.includes(' '))\n    .map((e) => e.splice(1, 1));\n\n  const measureArray = Object.entries(selectedRecipe)\n    .filter((keyName) => keyName[0].includes('strMeasure'))\n    .filter((ingredient) => !ingredient.includes(null))\n    .filter((ingredient) => !ingredient.includes(''))\n    .filter((ingredient) => !ingredient.includes(' '))\n    .map((e) => e.splice(1, 1));\n\n  return ingredientsArray\n    .reduce((acc, curr, index) => {\n      acc.push(curr.concat(measureArray[index]));\n      return acc;\n    }, []);\n};\n\n// https://pt.stackoverflow.com/questions/329223/armazenar-um-array-de-objetos-em-um-local-storage-com-js\n\nexport const saveFavoriteRecipeOnStorage = (recipe, recipeType) => {\n  const FAVORITE_RECIPES = 'favoriteRecipes';\n  let favoriteRecipes = [];\n\n  if (localStorage.FAVORITE_RECIPES) {\n    favoriteRecipes = JSON.parse(localStorage.getItem(FAVORITE_RECIPES));\n  }\n\n  if (recipeType === 'comida') {\n    favoriteRecipes.push({\n      id: recipe.idMeal,\n      type: recipeType,\n      area: recipe.strArea,\n      category: recipe.strCategory,\n      alcoholicOrNot: '',\n      name: recipe.strMeal,\n      image: recipe.strMealThumb,\n    });\n  } else {\n    favoriteRecipes.push({\n      id: recipe.idDrink,\n      type: recipeType,\n      area: '',\n      category: recipe.strCategory,\n      alcoholicOrNot: recipe.strAlcoholic,\n      name: recipe.strDrink,\n      image: recipe.strDrinkThumb,\n    });\n  }\n\n  localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n};\n","import { createContext } from 'react';\n\nconst ApplicationContext = createContext();\n\nexport default ApplicationContext;\n","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.ce4b07ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/unavailableVideo.cc69096f.png\";","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","/* eslint-disable react/self-closing-comp */\nimport React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ApplicationContext from '../context/ApplicationContext';\nimport {\n  fetchMealsIngredients,\n  fetchMealsName,\n  fetchMealsFirstLetter,\n  fetchDrinksIngredients,\n  fetchDrinksName,\n  fetchDrinksFirstLetter,\n} from '../services/helpers';\nimport '../styles/headerSearch.css';\n\nconst NULL_RESPONSE = 'Sinto muito, não encontramos nenhuma receita para esses filtros.';\n\nfunction HeaderSearchBar() {\n  const { setMealsArray, setDrinksArray } = useContext(ApplicationContext);\n  const [typedText, setTypedText] = useState('');\n  const [selectedRadio, setSelectedRadio] = useState('ingredient');\n  const history = useHistory();\n\n  const { location: { pathname } } = history;\n\n  const meals = {\n    ingredient: fetchMealsIngredients,\n    name: fetchMealsName,\n    firstLetter: fetchMealsFirstLetter,\n  };\n\n  const drinks = {\n    ingredient: fetchDrinksIngredients,\n    name: fetchDrinksName,\n    firstLetter: fetchDrinksFirstLetter,\n  };\n\n  const mealsRequest = async () => {\n    const isFirstLetter = selectedRadio === 'firstLetter';\n    const invalidLength = typedText.length > 1 || typedText.length === 0;\n    if (isFirstLetter && invalidLength) {\n      return global.alert('Sua busca deve conter 1 (um) caracter');\n    }\n    const responseAPI = await meals[selectedRadio](typedText);\n    if (responseAPI.meals === null) {\n      return global.alert(NULL_RESPONSE);\n    }\n    if (responseAPI.meals.length === 1) {\n      const mealID = responseAPI.meals[0].idMeal;\n      return history.push(`/comidas/${mealID}`);\n    }\n    setMealsArray(responseAPI.meals);\n  };\n\n  const drinksRequest = async () => {\n    const isFirstLetter = selectedRadio === 'firstLetter';\n    const invalidLength = typedText.length > 1;\n    if (isFirstLetter && invalidLength) {\n      return global.alert('Sua busca deve conter somente 1 (um) caracter');\n    }\n    const responseAPI = await drinks[selectedRadio](typedText);\n    if (responseAPI.drinks === null) {\n      return global.alert(NULL_RESPONSE);\n    }\n    if (responseAPI.drinks.length === 1) {\n      const drinkID = responseAPI.drinks[0].idDrink;\n      return history.push(`/bebidas/${drinkID}`);\n    }\n    setDrinksArray(responseAPI.drinks);\n  };\n\n  const handleClick = () => {\n    if (pathname === '/comidas') return mealsRequest();\n    if (pathname === '/bebidas') return drinksRequest();\n  };\n\n  const handleChange = ({ target }) => {\n    const { value, type, id } = target;\n    if (type === 'text') {\n      setTypedText(value);\n    }\n    if (type === 'radio') {\n      setSelectedRadio(id);\n    }\n  };\n\n  return (\n    <div className=\"header-search\">\n      <input\n        type=\"text\"\n        data-testid=\"search-input\"\n        value={ typedText }\n        onChange={ (event) => handleChange(event) }\n      />\n      <label htmlFor=\"ingredient\" style={ { color: 'white' } }>\n        <input\n          type=\"radio\"\n          id=\"ingredient\"\n          name=\"search-radio\"\n          data-testid=\"ingredient-search-radio\"\n          value={ selectedRadio }\n          onClick={ (event) => handleChange(event) }\n        />\n        Ingrediente\n      </label>\n      <label htmlFor=\"name\" style={ { color: 'white' } }>\n        <input\n          type=\"radio\"\n          id=\"name\"\n          name=\"search-radio\"\n          data-testid=\"name-search-radio\"\n          value={ selectedRadio }\n          onClick={ (event) => handleChange(event) }\n        />\n        Nome\n      </label>\n      <label htmlFor=\"firstLetter\" style={ { color: 'white' } }>\n        <input\n          type=\"radio\"\n          id=\"firstLetter\"\n          name=\"search-radio\"\n          data-testid=\"first-letter-search-radio\"\n          value={ selectedRadio }\n          onClick={ (event) => handleChange(event) }\n        />\n        Primeira Letra\n      </label>\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ () => handleClick() }\n      >\n        Buscar\n      </button>\n    </div>\n  );\n}\n\nexport default HeaderSearchBar;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/login.css';\n\nfunction Login() {\n  const history = useHistory();\n\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n\n  const handleChange = ({ target }) => {\n    const { value, name } = target;\n    return name === 'email' ? setEmail(value) : setPassword(value);\n  };\n\n  const isDisabledButton = () => {\n    const passwordLength = 6;\n    if (email.includes('.com')\n    && email.includes('@')\n    && password.length > passwordLength) {\n      return false;\n    }\n    return true;\n  };\n\n  const saveOnLocalStorage = () => {\n    localStorage.setItem('user', JSON.stringify({ email }));\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('cocktailsToken', 1);\n  };\n\n  return (\n    <div className=\"login-container\">\n      <form className=\"form-group form-login-container\">\n        <div\n          className=\"div-container-all p-3 mb-5 bg-white rounded\"\n        >\n          <div className=\"sign-in-text-container\">\n            <p className=\"sign-in-paragraph\">\n              Faça Login\n            </p>\n          </div>\n          <div className=\"email-container\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              className=\"form-control form-control-sm input-email\"\n              aria-describedby=\"emailHelp\"\n              value={ email }\n              placeholder=\"Enter an email\"\n              data-testid=\"email-input\"\n              onChange={ (event) => handleChange(event) }\n            />\n          </div>\n          <div className=\"password-container\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control form-control-sm input-password\"\n              value={ password }\n              placeholder=\"Choose a password min. 7 char\"\n              data-testid=\"password-input\"\n              onChange={ (event) => handleChange(event) }\n            />\n          </div>\n          <button\n            className=\"btn btn-danger\"\n            type=\"button\"\n            data-testid=\"login-submit-btn\"\n            variant=\"success\"\n            disabled={ isDisabledButton() }\n            onClick={\n              (() => {\n                saveOnLocalStorage();\n                history.push('/comidas');\n              })\n            }\n          >\n            Entrar\n          </button>\n        </div>\n        <div className=\"date-container\">\n          <p className=\"date-paragraph\">\n            &#169;\n            &nbsp;\n            {`Jan/${new Date().getFullYear()}`}\n          </p>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\nimport '../styles/footer.css';\n\nfunction Footer() {\n  return (\n    <footer\n      data-testid=\"footer\"\n      className=\"footer\"\n      style={ { backgroundColor: 'white' } }\n    >\n      <div className=\"footer-container\">\n        <Link\n          src={ drinkIcon }\n          data-testid=\"drinks-bottom-btn\"\n          to=\"/bebidas\"\n        >\n          <img src={ drinkIcon } alt=\"Drinks\" />\n        </Link>\n        <Link\n          src={ exploreIcon }\n          data-testid=\"explore-bottom-btn\"\n          to=\"/explorar\"\n        >\n          <img src={ exploreIcon } alt=\"explore\" />\n        </Link>\n        <Link\n          src={ mealIcon }\n          data-testid=\"food-bottom-btn\"\n          to=\"/comidas\"\n        >\n          <img src={ mealIcon } alt=\"Meal\" />\n        </Link>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchImage from '../images/searchIcon.svg';\nimport HeaderSearchBar from './HeaderSearchBar';\nimport '../styles/header.css';\n\nfunction Header({ pageName }) {\n  const [isHiddenSearchBar, setSearchBar] = useState(false);\n  const { location: { pathname } } = useHistory();\n  let toRenderSearchIcon = false;\n\n  if (pathname === '/comidas'\n  || pathname === '/bebidas'\n  || pathname === '/explorar/comidas/area') {\n    toRenderSearchIcon = true;\n  }\n\n  const toggleSearchBar = () => {\n    setSearchBar(!isHiddenSearchBar);\n  };\n\n  return (\n    <nav\n      className=\"navbar navbar-header-container header\"\n    >\n      <div className=\"btn-header-container\">\n        <Link\n          className=\"link-profile-header\"\n          src={ profileIcon }\n          data-testid=\"profile-top-btn\"\n          to=\"/perfil\"\n        >\n          <img src={ profileIcon } alt=\"User\" />\n        </Link>\n        <div\n          className=\"page-title\"\n          data-testid=\"page-title\"\n        >\n          { pageName }\n        </div>\n        {toRenderSearchIcon ? (\n          <button\n            className=\"search-btn-header\"\n            type=\"button\"\n            onClick={ () => toggleSearchBar() }\n          >\n            <img\n              src={ searchImage }\n              alt=\"Search\"\n              data-testid=\"search-top-btn\"\n            />\n          </button>\n        ) : (\n          null\n        )}\n        {isHiddenSearchBar ? <HeaderSearchBar /> : null}\n      </div>\n    </nav>\n  );\n}\n\nHeader.propTypes = {\n  pageName: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useContext, useEffect } from 'react';\nimport ApplicationContext from '../context/ApplicationContext';\nimport { fetchCategoriesMeals, fetchByMealCategory } from '../services/helpers';\n\nconst MAX_CATEGORIES = 4;\n\nfunction ButtonsMealsSearch() {\n  const { mealsCategory, setMealsCategory,\n    setMealsRecipes,\n    setArrayToRender, changeArrayToRender,\n    mealSelected, setMealSelected } = useContext(ApplicationContext);\n\n  const requestAPI = async () => {\n    const responseAPI = await fetchCategoriesMeals();\n    setMealsCategory(responseAPI.meals);\n  };\n\n  useEffect(() => {\n    requestAPI();\n  }, []);\n\n  const requestByMealCategory = async (categoryName) => {\n    const responseByCategoryName = await fetchByMealCategory(categoryName);\n    setMealsRecipes(responseByCategoryName.meals);\n    setMealSelected(categoryName);\n  };\n\n  const categoriesToRender = mealsCategory\n    .filter(({ strCategory }, index) => index <= MAX_CATEGORIES && strCategory);\n\n  return (\n    <div className=\"btn-category-container\">\n      <button\n        className=\"btn btn-danger btn-meals\"\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        onClick={ () => setArrayToRender(false) }\n      >\n        All\n      </button>\n      {categoriesToRender.map(({ strCategory }) => (\n        <button\n          className=\"btn btn-danger btn-meals\"\n          type=\"button\"\n          key={ strCategory }\n          name={ strCategory }\n          data-testid={ `${strCategory}-category-filter` }\n          onClick={ ({ target }) => {\n            if (target.name === mealSelected) {\n              setArrayToRender(!changeArrayToRender);\n            } else {\n              requestByMealCategory(target.name);\n            }\n          } }\n        >\n          {strCategory}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default ButtonsMealsSearch;\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ApplicationContext from '../context/ApplicationContext';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport ButtonsMealsSearch from '../components/ButtonsMealsSearch';\nimport { fetchMeals } from '../services/helpers';\nimport '../styles/recipesMainScreen.css';\n\n// const MAX_RECIPES = 11;\n\nfunction RecipesMainScreen() {\n  const history = useHistory();\n  const {\n    mealsArray,\n    setMealsArray,\n    recipesByMealsCategory,\n    setArrayToRender,\n    changeArrayToRender,\n    exploreByIngredients,\n    setIngredientExplored } = useContext(ApplicationContext);\n  const recipesToRender = changeArrayToRender\n    ? recipesByMealsCategory\n    : mealsArray;\n\n  //     .filter((meal, index) => index <= MAX_RECIPES && meal)\n  // .filter((meal, index) => index <= MAX_RECIPES && meal)\n\n  const requestAPI = async () => {\n    const responseAPI = await fetchMeals();\n    setMealsArray(responseAPI.meals);\n  };\n\n  useEffect(() => {\n    if (exploreByIngredients.length === 0) {\n      requestAPI();\n    } else {\n      setMealsArray(exploreByIngredients);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (recipesByMealsCategory.length === 0) {\n      setArrayToRender(false);\n    } else {\n      setArrayToRender(true);\n    }\n  }, [recipesByMealsCategory]);\n\n  useEffect(() => () => setIngredientExplored([]), []);\n\n  return (\n    <div className=\"screen-container\">\n      <Header pageName=\"Comidas\" />\n      <ButtonsMealsSearch />\n      <div className=\"container-cards\">\n        <div\n          className=\"card-group-container\"\n        >\n          {recipesToRender.map((recipe, index) => (\n            <div\n              className=\"card\"\n              key={ recipe.idMeal }\n            >\n              <button\n                className=\"card-btn\"\n                type=\"button\"\n                data-testid={ `${index}-recipe-card` }\n                name={ recipe.idMeal }\n                onClick={ ({ target }) => history.push(`/comidas/${target.name}`) }\n              >\n                <img\n                  className=\"card-img-top\"\n                  src={ recipe.strMealThumb }\n                  name={ recipe.idMeal }\n                  alt=\"Meal\"\n                  data-testid={ `${index}-card-img` }\n                />\n                <div className=\"paragraph-container\">\n                  <p\n                    className=\"p-recipe-title\"\n                    data-testid={ `${index}-card-name` }\n                    name={ recipe.idMeal }\n                  >\n                    {recipe.strMeal}\n                  </p>\n                </div>\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default RecipesMainScreen;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nfunction Profile() {\n  const history = useHistory();\n  let isValidUser = false;\n  let parseUser;\n\n  if (localStorage.length !== 0) {\n    const { user } = localStorage;\n    parseUser = JSON.parse(user);\n    isValidUser = true;\n  }\n\n  return (\n    <div data-testid=\"page-title\">\n      <Header pageName=\"Perfil\" />\n      <h2 data-testid=\"profile-email\">\n        {isValidUser ? (\n          parseUser.email\n        ) : null}\n      </h2>\n      <button\n        type=\"button\"\n        data-testid=\"profile-done-btn\"\n        onClick={\n          (() => {\n            history.push('/receitas-feitas');\n          })\n        }\n      >\n        Receitas Feitas\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"profile-favorite-btn\"\n        onClick={\n          (() => {\n            history.push('/receitas-favoritas');\n          })\n        }\n      >\n        Receitas Favoritas\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"profile-logout-btn\"\n        onClick={\n          (() => {\n            localStorage.clear();\n            history.push('/');\n          })\n        }\n      >\n        Sair\n      </button>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import React, { useContext, useEffect } from 'react';\nimport ApplicationContext from '../context/ApplicationContext';\nimport { fetchCategoriesDrinks, fetchByDrinkCategory } from '../services/helpers';\n\nconst MAX_CATEGORIES = 4;\n\nfunction ButtonsDrinksSearch() {\n  const {\n    drinksCategory,\n    setDrinksRecipes,\n    setDrinksCategory,\n    drinkSelected,\n    setDrinkSelected,\n    setArrayToRender,\n    changeArrayToRender,\n  } = useContext(ApplicationContext);\n\n  const requestAPI = async () => {\n    const responseAPI = await fetchCategoriesDrinks();\n    setDrinksCategory(responseAPI.drinks);\n  };\n\n  useEffect(() => {\n    requestAPI();\n  }, []);\n\n  const categoriesToRender = drinksCategory\n    .filter((drinkCategory, index) => index <= MAX_CATEGORIES && drinkCategory);\n\n  const requestByDrinkCategory = async (categoryName) => {\n    const responseByCategoryName = await fetchByDrinkCategory(categoryName);\n    setDrinksRecipes(responseByCategoryName.drinks);\n    setDrinkSelected(categoryName);\n  };\n\n  return (\n    <div className=\"btn-category-container\">\n      <button\n        className=\"btn btn-danger btn-drinks\"\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        onClick={ () => setArrayToRender(false) }\n      >\n        All\n      </button>\n      {categoriesToRender.map(({ strCategory }) => (\n        <button\n          className=\"btn btn-danger btn-drinks\"\n          type=\"button\"\n          key={ strCategory }\n          name={ strCategory }\n          data-testid={ `${strCategory}-category-filter` }\n          onClick={ ({ target }) => {\n            if (target.name === drinkSelected) {\n              setArrayToRender(!changeArrayToRender);\n            } else {\n              requestByDrinkCategory(target.name);\n            }\n          } }\n        >\n          { strCategory }\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default ButtonsDrinksSearch;\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ApplicationContext from '../context/ApplicationContext';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { fetchDrinks } from '../services/helpers';\nimport ButtonsDrinksSearch from '../components/ButtonsDrinksSearch';\nimport '../styles/recipesMainScreen.css';\n\nconst MAX_RECIPES = 11;\n\nfunction DrinksMainScreen() {\n  const history = useHistory();\n  const {\n    drinksArray,\n    setDrinksArray,\n    setArrayToRender,\n    changeArrayToRender,\n    recipesByDrinkCategory,\n    exploreByIngredients,\n    setIngredientExplored } = useContext(ApplicationContext);\n  const recipesToRender = changeArrayToRender\n    ? recipesByDrinkCategory\n    : drinksArray;\n\n  // .filter((drink, index) => index <= MAX_RECIPES && drink)\n  // .filter((drink, index) => index <= MAX_RECIPES && drink)\n\n  const requestAPI = async () => {\n    const responseAPI = await fetchDrinks();\n    setDrinksArray(responseAPI.drinks);\n  };\n\n  useEffect(() => {\n    if (exploreByIngredients.length === 0) {\n      requestAPI();\n    } else {\n      setDrinksArray(exploreByIngredients);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (recipesByDrinkCategory.length === 0) {\n      setArrayToRender(false);\n    } else {\n      setArrayToRender(true);\n    }\n  }, [recipesByDrinkCategory]);\n\n  useEffect(() => () => setIngredientExplored([]), []);\n\n  return (\n    <div className=\"screen-container\">\n      <Header pageName=\"Bebidas\" />\n      <ButtonsDrinksSearch />\n      <div className=\"container-cards\">\n        <div\n          className=\"card-group-container\"\n        >\n          {recipesToRender.map((recipe, index) => (\n            <div\n              className=\"card\"\n              key={ recipe.idDrink }\n            >\n              <button\n                className=\"card-btn\"\n                type=\"button\"\n                data-testid={ `${index}-recipe-card` }\n                name={ recipe.idDrink }\n                onClick={ ({ target }) => history.push(`/bebidas/${target.name}`) }\n              >\n                <img\n                  className=\"card-img-top\"\n                  src={ recipe.strDrinkThumb }\n                  name={ recipe.idDrink }\n                  alt=\"Drink\"\n                  data-testid={ `${index}-card-img` }\n                />\n                <div className=\"paragraph-container\">\n                  <p\n                    className=\"p-recipe-title\"\n                    data-testid={ `${index}-card-name` }\n                    name={ recipe.idDrink }\n                  >\n                    {recipe.strDrink}\n                  </p>\n                </div>\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default DrinksMainScreen;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { fetchMealsRandom } from '../services/helpers';\n\nfunction ExploreRecipies() {\n  const history = useHistory();\n\n  const randomMeals = async () => {\n    const responseAPI = await fetchMealsRandom();\n    const { idMeal } = responseAPI.meals[0];\n    return history.push(`/comidas/${idMeal}`);\n  };\n\n  return (\n    <div>\n      <Header pageName=\"Explorar Comidas\" />\n      <button\n        type=\"button\"\n        data-testid=\"explore-by-ingredient\"\n        onClick={\n          (() => {\n            history.push('/explorar/comidas/ingredientes');\n          })\n        }\n      >\n        Por Ingredientes\n      </button>\n\n      <button\n        type=\"button\"\n        data-testid=\"explore-by-area\"\n        onClick={\n          (() => {\n            history.push('/explorar/comidas/area');\n          })\n        }\n      >\n        Por Local de Origem\n      </button>\n\n      <button\n        type=\"button\"\n        data-testid=\"explore-surprise\"\n        onClick={\n          (() => {\n            randomMeals();\n          })\n        }\n      >\n        Me Surpreenda!\n      </button>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreRecipies;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { fetchDrinksRandom } from '../services/helpers';\n\nfunction ExploreDrinks() {\n  const history = useHistory();\n\n  const randomDrinks = async () => {\n    const responseAPI = await fetchDrinksRandom();\n    const { idDrink } = responseAPI.drinks[0];\n    return history.push(`/bebidas/${idDrink}`);\n  };\n\n  return (\n    <div>\n      <Header pageName=\"Explorar Bebidas\" />\n      <button\n        type=\"button\"\n        data-testid=\"explore-by-ingredient\"\n        onClick={\n          (() => {\n            history.push('/explorar/bebidas/ingredientes');\n          })\n        }\n      >\n        Por Ingredientes\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"explore-surprise\"\n        onClick={\n          (() => {\n            randomDrinks();\n          })\n        }\n      >\n        Me Surpreenda!\n      </button>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreDrinks;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport ApplicationContext from '../context/ApplicationContext';\nimport { fetchMealIngredients, fetchMealsByIngredient } from '../services/helpers';\n\nconst MAX_INGREDIENTS = 11;\n\nfunction ExploreMealsIngredients() {\n  const [ingredients, setIngredients] = useState([]);\n  const { setIngredientExplored } = useContext(ApplicationContext);\n\n  const history = useHistory();\n\n  const ingredientsToRender = ingredients\n    .filter((meal, index) => index <= MAX_INGREDIENTS && meal);\n\n  const requestIngredients = async () => {\n    const responseAPI = await fetchMealIngredients();\n    setIngredients(responseAPI.meals);\n  };\n\n  useEffect(() => {\n    requestIngredients();\n  }, []);\n\n  return (\n    <div>\n      <Header pageName=\"Explorar Ingredientes\" />\n      {ingredientsToRender.map((item, index) => (\n        <button\n          type=\"button\"\n          key={ index }\n          data-testid={ `${index}-ingredient-card` }\n          onClick={ async () => {\n            const responseAPI = await fetchMealsByIngredient(item.strIngredient);\n            setIngredientExplored(responseAPI.meals);\n            history.push('/comidas');\n          } }\n        >\n          <div>\n            <img\n              src={ `https://www.themealdb.com/images/ingredients/${item.strIngredient}-Small.png` }\n              alt=\"ingredient\"\n              data-testid={ `${index}-card-img` }\n            />\n            <p\n              data-testid={ `${index}-card-name` }\n            >\n              {item.strIngredient}\n            </p>\n          </div>\n        </button>\n      ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreMealsIngredients;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { fetchDrinkIngredients, fetchDrinksByIngredient } from '../services/helpers';\nimport ApplicationContext from '../context/ApplicationContext';\n\nconst MAX_INGREDIENTS = 11;\n\nfunction ExploreDrinksIngredients() {\n  const [ingredients, setIngredients] = useState([]);\n  const { setIngredientExplored } = useContext(ApplicationContext);\n\n  const history = useHistory();\n\n  const ingredientsToRender = ingredients\n    .filter((drink, index) => index <= MAX_INGREDIENTS && drink);\n\n  const requestIngredients = async () => {\n    const responseAPI = await fetchDrinkIngredients();\n    setIngredients(responseAPI.drinks);\n  };\n\n  useEffect(() => {\n    requestIngredients();\n  }, []);\n\n  return (\n    <div>\n      <Header pageName=\"Explorar Ingredientes\" />\n      {ingredientsToRender.map((item, index) => (\n        <button\n          type=\"button\"\n          data-testid={ `${index}-ingredient-card` }\n          key={ index }\n          onClick={ async () => {\n            const responseAPI = await fetchDrinksByIngredient(item.strIngredient1);\n            setIngredientExplored(responseAPI.drinks);\n            history.push('/bebidas');\n          } }\n        >\n          <div>\n            <img\n              src={ `https://www.thecocktaildb.com/images/ingredients/${item.strIngredient1}-Small.png` }\n              alt=\"ingredient\"\n              data-testid={ `${index}-card-img` }\n            />\n            <p\n              data-testid={ `${index}-card-name` }\n            >\n              {item.strIngredient1}\n            </p>\n          </div>\n        </button>\n      ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreDrinksIngredients;\n","import copy from 'clipboard-copy';\nimport { arrayOfIngredientsAndMeasurements } from './helpers';\n\nexport const getInProgressStoraged = (recipeType, recipeID, targetName) => {\n  const stored = localStorage.getItem('inProgressRecipes');\n  const parseRecipesInProgress = JSON.parse(stored);\n  const progressTypeID = parseRecipesInProgress[recipeType][recipeID];\n  if (!progressTypeID) {\n    parseRecipesInProgress[recipeType][recipeID] = [targetName];\n    return localStorage\n      .setItem('inProgressRecipes', JSON.stringify(parseRecipesInProgress));\n  }\n  if (progressTypeID.includes(targetName)) {\n    const ingredientIndex = progressTypeID\n      .indexOf(targetName);\n    progressTypeID.splice(ingredientIndex, 1);\n  } else {\n    progressTypeID.push(targetName);\n  }\n  localStorage.setItem('inProgressRecipes', JSON.stringify(parseRecipesInProgress));\n};\n\nexport const getProgressStored = (ingredient, recipeID, inProgressStored, recipeType) => {\n  if (!inProgressStored[recipeType][recipeID]) {\n    return false;\n  }\n  const recipeInProgress = inProgressStored[recipeType][recipeID];\n  return recipeInProgress.some((item) => item === ingredient[0]);\n};\n\nexport const onClipboardClicked = (setClipboardState, URL) => {\n  const removeInProgress = URL.split('/').includes('in-progress');\n  if (removeInProgress) {\n    const positionToslice = 3;\n    URL = URL.split('/').slice(0, positionToslice).join('/');\n  }\n  copy(`http://localhost:3000${URL}`);\n  setClipboardState(true);\n  const ONDE_SECOND = 1000;\n  setTimeout(() => {\n    setClipboardState(false);\n  }, ONDE_SECOND);\n};\n\nexport const checkIfThereIsLocalStorage = (storageKey) => {\n  const stored = localStorage.getItem(storageKey);\n  const parseStorage = JSON.parse(stored);\n  if (!parseStorage) {\n    return false;\n  }\n  return parseStorage;\n};\n\nconst removeRecipe = (favoriteRecipes, addRecipeOnStorage) => {\n  const recipeIndex = favoriteRecipes.indexOf(addRecipeOnStorage);\n  favoriteRecipes.splice(recipeIndex, 1);\n  return favoriteRecipes;\n};\n\n// https://pt.stackoverflow.com/questions/329223/armazenar-um-array-de-objetos-em-um-local-storage-com-js\nexport const saveFavoriteRecipeOnStorage = (recipe, recipeType) => {\n  const FAVORITE_RECIPES = 'favoriteRecipes';\n  let favoriteRecipes = [];\n  let mealOrDrink = 'idMeal';\n  if (recipeType === 'bebida') mealOrDrink = 'idDrink';\n\n  if (checkIfThereIsLocalStorage(FAVORITE_RECIPES)) {\n    favoriteRecipes = JSON.parse(localStorage.getItem(FAVORITE_RECIPES));\n  }\n\n  const addRecipeOnStorage = favoriteRecipes\n    .find((recipeOnStorage) => recipeOnStorage.id === recipe[mealOrDrink]);\n  if (!addRecipeOnStorage) {\n    if (recipeType === 'comida') {\n      favoriteRecipes.push({\n        id: recipe.idMeal,\n        type: recipeType,\n        area: recipe.strArea,\n        category: recipe.strCategory,\n        alcoholicOrNot: '',\n        name: recipe.strMeal,\n        image: recipe.strMealThumb,\n      });\n    } else {\n      favoriteRecipes.push({\n        id: recipe.idDrink,\n        type: recipeType,\n        area: '',\n        category: recipe.strCategory,\n        alcoholicOrNot: recipe.strAlcoholic,\n        name: recipe.strDrink,\n        image: recipe.strDrinkThumb,\n      });\n    }\n  } else {\n    removeRecipe(favoriteRecipes, addRecipeOnStorage);\n  }\n  localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n};\n\nexport const setHeartIcon = (setRecipeToFavorite, id) => {\n  const checkLocalStorage = checkIfThereIsLocalStorage('favoriteRecipes');\n  if (checkLocalStorage && checkLocalStorage.length !== 0) {\n    const parseFavoritedRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const isRecipeFavorited = parseFavoritedRecipes\n      .some((storedAsFavorite) => storedAsFavorite.id === id);\n    if (isRecipeFavorited) setRecipeToFavorite(true);\n  }\n};\n\nexport const isButtonFinishDisabled = (\n  storedProgress,\n  history,\n  selectedMeal,\n  setButtonToFinish,\n) => {\n  const splitedPathname = history.location.pathname.split('/');\n  let recipeType = splitedPathname[1];\n  const id = splitedPathname[2];\n  if (recipeType === 'comidas') recipeType = 'meals';\n  if (recipeType === 'bebidas') recipeType = 'cocktails';\n  if (Object.entries(storedProgress).length !== 0 && storedProgress[recipeType][id]) {\n    const numberOfCheckboxes = arrayOfIngredientsAndMeasurements(selectedMeal).length;\n    const numberOfChecked = storedProgress[recipeType][id].length;\n    if (numberOfCheckboxes === numberOfChecked) {\n      setButtonToFinish(false);\n    } else {\n      setButtonToFinish(true);\n    }\n  }\n};\n\nexport const saveDoneRecipeOnStorage = (recipe, recipeType) => {\n  const DONE_RECIPES = 'doneRecipes';\n  let doneRecipes = [];\n\n  if (checkIfThereIsLocalStorage(DONE_RECIPES)) {\n    doneRecipes = JSON.parse(localStorage.getItem(DONE_RECIPES));\n  }\n\n  if (recipeType === 'comida') {\n    doneRecipes.push({\n      id: recipe.idMeal,\n      type: recipeType,\n      area: recipe.strArea,\n      category: recipe.strCategory,\n      alcoholicOrNot: '',\n      name: recipe.strMeal,\n      image: recipe.strMealThumb,\n      doneDate: new Date().toLocaleDateString('pt-br'),\n      tags: [recipe.strTags[0], recipe.strTags[1]],\n    });\n  } else {\n    doneRecipes.push({\n      id: recipe.idDrink,\n      type: recipeType,\n      area: '',\n      category: recipe.strCategory,\n      alcoholicOrNot: recipe.strAlcoholic,\n      name: recipe.strDrink,\n      image: recipe.strDrinkThumb,\n      doneDate: '',\n      tags: [],\n    });\n  }\n\n  localStorage.setItem('doneRecipes', JSON.stringify(doneRecipes));\n};\n\n/**\n * Unfavorite Recipe\n * @param {string} id The ID of the recipe -included on URL-\n * @returns\n */\n\nexport const unfavoriteButton = (id) => {\n  const arrayFromStorage = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  arrayFromStorage.splice(arrayFromStorage.indexOf(id, 0), 1);\n\n  localStorage.setItem('favoriteRecipes', JSON.stringify(arrayFromStorage));\n};\n","import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\nimport { onClipboardClicked } from '../services/supportFunctions';\nimport ApplicationContext from '../context/ApplicationContext';\n\nfunction DoneMeals({ meals }) {\n  const history = useHistory();\n  const { clipboardState, setClipboardState } = useContext(ApplicationContext);\n\n  return (\n    <div>\n      {\n        meals.map((item, index) => {\n          if (item.type === 'comida') {\n            return (\n              <div key={ index }>\n                <button\n                  type=\"button\"\n                  onClick={ () => history.push(`/comidas/${item.id}`) }\n                >\n                  <div>\n                    <img\n                      style={ { width: '50px', height: '50px' } }\n                      src={ item.image }\n                      alt=\"comida\"\n                      data-testid={ `${index}-horizontal-image` }\n                    />\n                    <p data-testid={ `${index}-horizontal-name` }>{ item.name }</p>\n                  </div>\n                </button>\n                <p\n                  data-testid={ `${index}-horizontal-top-text` }\n                >\n                  { `${item.area} - ${item.category}` }\n                </p>\n                <button\n                  src={ shareIcon }\n                  type=\"button\"\n                  data-testid={ `${index}-horizontal-share-btn` }\n                  onClick={ () => {\n                    const pathname = `/comidas/${item.id}`;\n                    onClipboardClicked(setClipboardState, pathname);\n                  } }\n                >\n                  <img src={ shareIcon } alt=\"compartilhar\" />\n                </button>\n                <p>\n                  {clipboardState ? 'Link copiado!' : ''}\n                </p>\n                <p data-testid={ `${index}-horizontal-done-date` }>{ item.doneDate }</p>\n                <p\n                  data-testid={ `${index}-${item.tags[0]}-horizontal-tag` }\n                >\n                  { item.tags[0]}\n                </p>\n                <p\n                  data-testid={ `${index}-${item.tags[1]}-horizontal-tag` }\n                >\n                  { item.tags[1]}\n                </p>\n              </div>\n            );\n          }\n          return (\n            <div key={ index }>\n              <button\n                type=\"button\"\n                onClick={ () => history.push(`/bebidas/${item.id}`) }\n              >\n                <div>\n                  <img\n                    style={ { width: '50px', height: '50px' } }\n                    src={ item.image }\n                    alt=\"bebida\"\n                    data-testid={ `${index}-horizontal-image` }\n                  />\n                  <p data-testid={ `${index}-horizontal-name` }>{ item.name }</p>\n                </div>\n              </button>\n              <p\n                data-testid={ `${index}-horizontal-top-text` }\n              >\n                { item.alcoholicOrNot }\n              </p>\n              <button\n                src={ shareIcon }\n                type=\"button\"\n                data-testid={ `${index}-horizontal-share-btn` }\n                onClick={ () => {\n                  const pathname = `/bebidas/${item.id}`;\n                  onClipboardClicked(setClipboardState, pathname);\n                } }\n              >\n                <img src={ shareIcon } alt=\"compartilhar\" />\n              </button>\n              <p>\n                {clipboardState ? 'Link copiado!' : ''}\n              </p>\n              <p data-testid={ `${index}-horizontal-done-date` }>{ item.doneDate }</p>\n            </div>\n          );\n        })\n      }\n    </div>\n  );\n}\n\nDoneMeals.propTypes = {\n  meals: PropTypes.shape(PropTypes.objectOf.any).isRequired,\n};\n\nexport default DoneMeals;\n","import React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport DoneMeals from '../components/DoneMeals';\nimport { checkIfThereIsLocalStorage } from '../services/supportFunctions';\n\nfunction RecipesDone() {\n  const [meals, setMeals] = useState([]);\n\n  useEffect(() => {\n    if (checkIfThereIsLocalStorage('doneRecipes')) {\n      setMeals(checkIfThereIsLocalStorage('doneRecipes'));\n    } else {\n      localStorage.setItem('doneRecipes', JSON.stringify([]));\n    }\n  }, []);\n\n  const arrayToRender = ({ name }) => {\n    const typeOfFilter = {\n      Food: 'comida',\n      Drinks: 'bebida',\n    };\n    if (name !== 'All') {\n      const filteredArray = meals.filter((item) => item.type === typeOfFilter[name]);\n      return setMeals(filteredArray);\n    }\n    setMeals(checkIfThereIsLocalStorage('doneRecipes'));\n  };\n\n  return (\n    <div>\n      <Header pageName=\"Receitas Feitas\" />\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-all-btn\"\n        name=\"All\"\n        onClick={ ({ target }) => arrayToRender(target) }\n      >\n        All\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-food-btn\"\n        name=\"Food\"\n        onClick={ ({ target }) => arrayToRender(target) }\n      >\n        Food\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-drink-btn\"\n        name=\"Drinks\"\n        onClick={ ({ target }) => arrayToRender(target) }\n      >\n        Drinks\n      </button>\n      <DoneMeals meals={ meals } />\n    </div>\n  );\n}\n\nexport default RecipesDone;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../components/Header';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport { onClipboardClicked, unfavoriteButton } from '../services/supportFunctions';\nimport ApplicationContext from '../context/ApplicationContext';\n\nfunction FavoriteRecipes() {\n  const [reRender, setRerender] = useState(false);\n  const [reRenderFoodOnly, setReRenderFoodOnly] = useState(false);\n  const [filteredStorage, setFilteredStorage] = useState([]);\n  const history = useHistory();\n  const { clipboardState,\n    setClipboardState } = useContext(ApplicationContext);\n  const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n  useEffect(() => {\n    if (!favoriteRecipes) {\n      localStorage.setItem('favoriteRecipes', JSON.stringify([]));\n    }\n  });\n\n  const renderFood = (e, index) => (\n    <div key={ e.id }>\n      <h4 data-testid={ `${index}-horizontal-name` }>\n        {e.name}\n      </h4>\n\n      <button\n        type=\"button\"\n        onClick={ () => history.push(`/comidas/${e.id}`) }\n      >\n        <img\n          src={ e.image }\n          alt={ e.name }\n          style={ { width: '40px', height: '40px' } }\n          data-testid={ `${index}-horizontal-image` }\n        />\n      </button>\n\n      <h5 data-testid={ `${index}-horizontal-top-text` }>\n        {`${e.area} - ${e.category}`}\n      </h5>\n      <button\n        type=\"button\"\n        data-testid={ `${index}-horizontal-share-btn` }\n        src={ shareIcon }\n        onClick={ () => {\n          const URL = `/${e.type}s/${e.id}`;\n\n          onClipboardClicked(setClipboardState, URL);\n        } }\n      >\n        <img alt=\"share\" src={ shareIcon } />\n      </button>\n      <p>\n        {clipboardState ? 'Link copiado!' : ''}\n      </p>\n\n      <button\n        type=\"button\"\n        data-testid={ `${index}-horizontal-favorite-btn` }\n        src={ blackHeartIcon }\n        onClick={ () => {\n          unfavoriteButton(e.id);\n          setRerender(!reRender);\n        } }\n\n      >\n        <img\n          alt=\"favorite\"\n          src={ blackHeartIcon }\n        />\n      </button>\n    </div>\n  );\n\n  const renderDrink = (e, index) => (\n    <div key={ e.id }>\n      <button\n        type=\"button\"\n        onClick={ () => history.push(`/bebidas/${e.id}`) }\n      >\n        <h4 data-testid={ `${index}-horizontal-name` }>\n          {e.name}\n        </h4>\n\n        <img\n          src={ e.image }\n          alt={ e.name }\n          style={ { width: '40px', height: '40px' } }\n          data-testid={ `${index}-horizontal-image` }\n        />\n      </button>\n\n      <h5 data-testid={ `${index}-horizontal-top-text` }>{e.alcoholicOrNot}</h5>\n\n      <button\n        type=\"button\"\n        data-testid={ `${index}-horizontal-share-btn` }\n        src={ shareIcon }\n        onClick={ () => {\n          const URL = history.location.pathname;\n          onClipboardClicked(setClipboardState, URL);\n        } }\n\n      >\n        <img\n          alt=\"share\"\n          src={ shareIcon }\n        />\n      </button>\n      <p>\n        {clipboardState ? 'Link copiado!' : ''}\n      </p>\n\n      <button\n        type=\"button\"\n        data-testid={ `${index}-horizontal-favorite-btn` }\n        src={ blackHeartIcon }\n        onClick={ () => {\n          unfavoriteButton(e.id);\n          setRerender(!reRender);\n        } }\n\n      >\n        <img\n          alt=\"favorite\"\n          src={ blackHeartIcon }\n        />\n      </button>\n    </div>\n  );\n\n  const renderFavorites = (e, type, index) => {\n    if (type === 'comida') {\n      return renderFood(e, index);\n    }\n\n    if (type === 'bebida') {\n      return renderDrink(e, index);\n    }\n  };\n\n  const renderFavorited = (arrayOfFavorites) => (\n    <div>\n      {\n        !arrayOfFavorites ? (\n          <>\n          </>\n\n        ) : (\n          <div>\n            {arrayOfFavorites.map((e, index) => (\n              <div key={ e.id }>\n                <div>\n                  {renderFavorites(e, e.type, index)}\n                </div>\n              </div>\n            ))}\n          </div>\n        )\n      }\n    </div>\n  );\n\n  const renderByFilterButton = ({ target }, array) => {\n    if (target.value === 'Food') {\n      const newArr = array.filter((e) => e.type === 'comida');\n      setFilteredStorage(newArr);\n    } else if (target.value === 'Drink') {\n      const newArr = array.filter((e) => e.type === 'bebida');\n      setFilteredStorage(newArr);\n      return newArr;\n    } else {\n      setFilteredStorage(array);\n    }\n  };\n\n  return (\n    <div>\n      <Header pageName=\"Receitas Favoritas\" />\n      {filteredStorage.length > 0 ? (\n        renderFavorited(filteredStorage)\n      ) : (\n        renderFavorited(favoriteRecipes)\n      )}\n\n      <div>\n        <button\n          data-testid=\"filter-by-food-btn\"\n          type=\"button\"\n          value=\"Food\"\n          onClick={ (e) => {\n            renderByFilterButton(e, favoriteRecipes);\n            setReRenderFoodOnly(!reRenderFoodOnly);\n          } }\n        >\n          Food\n        </button>\n        <button\n          data-testid=\"filter-by-drink-btn\"\n          type=\"button\"\n          value=\"Drink\"\n          onClick={ (e) => {\n            renderByFilterButton(e, favoriteRecipes);\n            setReRenderFoodOnly(!reRenderFoodOnly);\n          } }\n        >\n          Drink\n        </button>\n        <button\n          data-testid=\"filter-by-all-btn\"\n          type=\"button\"\n          value=\"All\"\n          onClick={ (e) => {\n            renderByFilterButton(e, favoriteRecipes);\n            setReRenderFoodOnly(!reRenderFoodOnly);\n          } }\n        >\n          All\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default FavoriteRecipes;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport { fetchMealsArea, fetchByArea, fetchMeals } from '../services/helpers';\n\nconst MAX_RECIPES = 11;\n\nfunction ExploreRecipesByArea() {\n  const [area, setArea] = useState([]);\n  const [recipesByArea, setRecipesByArea] = useState([]);\n  const [hasButtonAll, setButtonAll] = useState(false);\n  const history = useHistory();\n\n  const requestAPI = async () => {\n    const responseAPI = await fetchMealsArea();\n    setArea(responseAPI.meals);\n  };\n\n  const requestByArea = async (value) => {\n    if (value === 'All') {\n      const responseAPI = await fetchMeals();\n      const twelveRecipes = responseAPI.meals\n        .filter((mealRecipe, index) => index <= MAX_RECIPES && mealRecipe);\n      return setRecipesByArea(twelveRecipes);\n    }\n    const responseAPI = await fetchByArea(value);\n    const twelveRecipes = responseAPI.meals\n      .filter((recipe, index) => index <= MAX_RECIPES && recipe);\n    setRecipesByArea(twelveRecipes);\n    setButtonAll(true);\n  };\n\n  useEffect(() => {\n    requestAPI();\n    requestByArea('American');\n  }, []);\n\n  return (\n    <div>\n      <Header pageName=\"Explorar Origem\" />\n      <div>\n        <select\n          style={ { display: 'block' } }\n          data-testid=\"explore-by-area-dropdown\"\n          onChange={ ({ target }) => requestByArea(target.value) }\n        >\n          {hasButtonAll ? (\n            <option data-testid=\"All-option\">All</option>)\n            : null}\n          {area.map((recipe, index) => (\n            <option\n              data-testid={ `${recipe.strArea}-option` }\n              key={ index }\n            >\n              {recipe.strArea}\n            </option>\n          ))}\n        </select>\n        {recipesByArea.map((recipe, index) => (\n          <button\n            style={ { display: 'block' } }\n            type=\"button\"\n            key={ recipe.idMeal }\n            data-testid={ `${index}-recipe-card` }\n            onClick={ () => history.push(`/comidas/${recipe.idMeal}`) }\n          >\n            <div>\n              <img\n                style={ { width: '50px', height: '50px' } }\n                src={ recipe.strMealThumb }\n                alt=\"Meal\"\n                data-testid={ `${index}-card-img` }\n              />\n              <p data-testid={ `${index}-card-name` }>\n                { recipe.strMeal }\n              </p>\n            </div>\n          </button>\n        ))}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreRecipesByArea;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nfunction Explore() {\n  const history = useHistory();\n\n  return (\n    <div>\n      <Header pageName=\"Explorar\" />\n      <button\n        type=\"button\"\n        data-testid=\"explore-food\"\n        onClick={ () => history.push('/explorar/comidas') }\n      >\n        Explorar Comidas\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"explore-drinks\"\n        onClick={ () => history.push('/explorar/bebidas') }\n      >\n        Explorar Bebidas\n      </button>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Explore;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport MealsContext from '../ApplicationContext';\n\nfunction ApplicationProvider({ children }) {\n  const [mealsArray, setMealsArray] = useState([]);\n  const [drinksArray, setDrinksArray] = useState([]);\n  const [mealsCategory, setMealsCategory] = useState([]);\n  const [drinksCategory, setDrinksCategory] = useState([]);\n  const [recipesByMealsCategory, setMealsRecipes] = useState([]);\n  const [recipesByDrinkCategory, setDrinksRecipes] = useState([]);\n  const [changeArrayToRender, setArrayToRender] = useState(false);\n  const [mealSelected, setMealSelected] = useState('');\n  const [drinkSelected, setDrinkSelected] = useState('');\n  const [selectedDrink, setSelectedDrink] = useState([]);\n  const [selectedMeal, setSelectedMeal] = useState([]);\n  const [storedProgress, setStoredProgress] = useState({});\n  const [clipboardState, setClipboardState] = useState(false);\n  const [hasStartButton, setStartButton] = useState(true);\n  const [alreadyStarted, setRecipeStarted] = useState(false);\n  const [exploreByIngredients, setIngredientExplored] = useState([]);\n\n  const contextValue = {\n    mealsArray,\n    setMealsArray,\n    drinksArray,\n    setDrinksArray,\n    mealsCategory,\n    setMealsCategory,\n    drinksCategory,\n    setDrinksCategory,\n    recipesByMealsCategory,\n    setMealsRecipes,\n    recipesByDrinkCategory,\n    setDrinksRecipes,\n    changeArrayToRender,\n    setArrayToRender,\n    mealSelected,\n    setMealSelected,\n    drinkSelected,\n    setDrinkSelected,\n    selectedDrink,\n    setSelectedDrink,\n    selectedMeal,\n    setSelectedMeal,\n    storedProgress,\n    setStoredProgress,\n    clipboardState,\n    setClipboardState,\n    hasStartButton,\n    setStartButton,\n    alreadyStarted,\n    setRecipeStarted,\n    exploreByIngredients,\n    setIngredientExplored,\n  };\n\n  return (\n    <MealsContext.Provider\n      value={ contextValue }\n    >\n      {children}\n    </MealsContext.Provider>\n  );\n}\n\nApplicationProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ApplicationProvider;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      Not Found\n    </div>\n  );\n}\n\nexport default NotFound;\n","/* eslint-disable react/jsx-max-depth */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable max-len */\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { fetchMealId, arrayOfIngredientsAndMeasurements } from '../services/helpers';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport {\n  getInProgressStoraged,\n  getProgressStored,\n  onClipboardClicked,\n  saveFavoriteRecipeOnStorage,\n  setHeartIcon,\n  isButtonFinishDisabled,\n  saveDoneRecipeOnStorage } from '../services/supportFunctions';\nimport ApplicationContext from '../context/ApplicationContext';\nimport '../styles/inProgress.css';\n\nfunction MealsInProgress() {\n  const {\n    storedProgress,\n    setStoredProgress,\n    clipboardState,\n    setClipboardState } = useContext(ApplicationContext);\n  const [selectedMeal, setSelectedMeal] = useState({});\n  const [isRecipeFavorite, setRecipeToFavorite] = useState(false);\n  const [isFinishButtonEnabled, setButtonToFinish] = useState(true);\n  const history = useHistory();\n  const { id } = useParams();\n\n  const searchId = async () => {\n    const responseAPI = await fetchMealId(id);\n    setSelectedMeal(responseAPI.meals[0]);\n  };\n\n  useEffect(() => {\n    const currentMeal = localStorage.getItem('currentMeal');\n    const parseCurrentMeal = JSON.parse(currentMeal);\n    if (!parseCurrentMeal) {\n      searchId();\n    } else {\n      setSelectedMeal(parseCurrentMeal);\n    }\n  }, []);\n\n  useEffect(() => {\n    const stored = localStorage.getItem('inProgressRecipes');\n    const parseRecipesInProgress = JSON.parse(stored);\n    if (!parseRecipesInProgress) {\n      const inProgressRecipes = {\n        cocktails: {},\n        meals: {\n          [id]: [],\n        },\n      };\n      setStoredProgress(inProgressRecipes);\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n    } else {\n      const checkedIngredients = parseRecipesInProgress.meals[id];\n      if (!checkedIngredients || checkedIngredients.length === 0) {\n        parseRecipesInProgress.meals[id] = [];\n      }\n      setStoredProgress(parseRecipesInProgress);\n      localStorage.setItem('inProgressRecipes', JSON.stringify(parseRecipesInProgress));\n    }\n  }, []);\n\n  useEffect(() => {\n    setHeartIcon(setRecipeToFavorite, id);\n  }, []);\n\n  useEffect(() => {\n    isButtonFinishDisabled(storedProgress, history, selectedMeal, setButtonToFinish);\n  }, [storedProgress]);\n\n  return (\n    <div className=\"inProgress-container-all\">\n      <div className=\"inProgress-container\">\n        <button\n          type=\"button\"\n          disabled\n          data-testid=\"recipe-category\"\n          id=\"category-in-progress\"\n          className=\"btn btns-recipe-details text-category btn-warning\"\n        >\n          { selectedMeal.strCategory }\n        </button>\n        <div className=\"photo-ingredients\">\n          <h1 data-testid=\"recipe-title\">{ selectedMeal.strMeal }</h1>\n          <img\n            className=\"recipe-photo\"\n            src={ selectedMeal.strMealThumb }\n            alt={ selectedMeal.strMeal }\n            data-testid=\"recipe-photo\"\n          />\n          <div className=\"ingredients-container\">\n            <div className=\"btns-container\">\n              <div\n                className=\"icon\"\n                data-testid=\"share-btn\"\n                onClick={ () => {\n                  const URL = history.location.pathname;\n                  onClipboardClicked(setClipboardState, URL);\n                } }\n              >\n                <img className=\"share-icon\" src={ shareIcon } alt=\"share\" />\n              </div>\n              {clipboardState ? 'Link copiado!' : ''}\n              <div\n                className=\"icon\"\n                data-testid=\"favorite-btn\"\n                src={ isRecipeFavorite ? 'blackHeartIcon' : 'whiteHeartIcon' }\n                onClick={ () => {\n                  saveFavoriteRecipeOnStorage(selectedMeal, 'comida');\n                  setRecipeToFavorite(!isRecipeFavorite);\n                } }\n              >\n                {isRecipeFavorite ? (\n                  <img className=\"favorite-icon\" src={ blackHeartIcon } alt=\"desfavoritar\" />\n                )\n                  : (<img className=\"favorite-icon\" src={ whiteHeartIcon } alt=\"favoritar\" />) }\n              </div>\n            </div>\n            <h3 id=\"ingredients-h3\">Ingredientes</h3>\n            <div className=\"ingredients-list\">\n              {\n                arrayOfIngredientsAndMeasurements(selectedMeal).map((ingredient, index) => (\n                  <div\n                    key={ index }\n                    data-testid={ `${index}-ingredient-step` }\n                    className=\"ingredient-step\"\n                  >\n                    <label\n                      htmlFor={ ingredient[0] }\n                      style={ { overflow: 'hidden' } }\n                    >\n                      <input\n                        type=\"checkbox\"\n                        checked={ getProgressStored(ingredient, id, storedProgress, 'meals') }\n                        id={ ingredient[0] }\n                        name={ ingredient[0] }\n                        onChange={ ({ target }) => {\n                          getInProgressStoraged('meals', id, target.name);\n                          const getStoredProgress = localStorage.getItem('inProgressRecipes');\n                          const parseStored = JSON.parse(getStoredProgress);\n                          setStoredProgress(parseStored);\n                        } }\n                      />\n                    &nbsp;\n                      <span className=\"ingredient-span\">\n                        {`${ingredient[0]} - ${ingredient[1]}`}\n                      </span>\n                    </label>\n                  </div>\n                ))\n              }\n            </div>\n          </div>\n        </div>\n        <div className=\"instructions-container\">\n          <h3>Instructions</h3>\n          <p data-testid=\"instructions\">{selectedMeal.strInstructions}</p>\n        </div>\n        <button\n          className=\"btn btns-recipe-details btn-make-recipe btn-danger in-progress-finish-recipe\"\n          data-testid=\"finish-recipe-btn\"\n          type=\"button\"\n          disabled={ isFinishButtonEnabled }\n          onClick={ () => {\n            history.push('/receitas-feitas');\n            saveDoneRecipeOnStorage(selectedMeal, 'comida');\n          } }\n        >\n          Finalizar Receita\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default MealsInProgress;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/jsx-max-depth */\n/* eslint-disable max-len */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { fetchDrinkId, arrayOfIngredientsAndMeasurements } from '../services/helpers';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport ApplicationContext from '../context/ApplicationContext';\nimport {\n  getInProgressStoraged,\n  getProgressStored,\n  onClipboardClicked,\n  saveFavoriteRecipeOnStorage,\n  setHeartIcon,\n  isButtonFinishDisabled,\n  saveDoneRecipeOnStorage } from '../services/supportFunctions';\nimport '../styles/inProgress.css';\n\nfunction DrinksInProgress() {\n  const {\n    storedProgress,\n    setStoredProgress,\n    clipboardState,\n    setClipboardState,\n  } = useContext(ApplicationContext);\n  const [selectedDrink, setSelectedDrink] = useState({});\n  const [isRecipeFavorite, setRecipeToFavorite] = useState(false);\n  const [isFinishButtonEnabled, setButtonToFinish] = useState(true);\n  const history = useHistory();\n  const { id } = useParams();\n\n  const searchId = async () => {\n    const responseAPI = await fetchDrinkId(id);\n    setSelectedDrink(responseAPI.drinks[0]);\n  };\n\n  useEffect(() => {\n    const currentDrink = localStorage.getItem('currentDrink');\n    const parseCurrentDrink = JSON.parse(currentDrink);\n    if (!parseCurrentDrink) {\n      searchId();\n    } else {\n      setSelectedDrink(parseCurrentDrink);\n    }\n  }, []);\n\n  useEffect(() => {\n    const stored = localStorage.getItem('inProgressRecipes');\n    const parseRecipesInProgress = JSON.parse(stored);\n    if (!parseRecipesInProgress) {\n      const inProgressRecipes = {\n        cocktails: {\n          [id]: [],\n        },\n        meals: {},\n      };\n      setStoredProgress(inProgressRecipes);\n      localStorage.setItem('inProgressRecipes', JSON.stringify(inProgressRecipes));\n    } else {\n      const checkedIngredients = parseRecipesInProgress.cocktails[id];\n      if (!checkedIngredients || checkedIngredients.length === 0) {\n        parseRecipesInProgress.cocktails[id] = [];\n      }\n      setStoredProgress(parseRecipesInProgress);\n      localStorage.setItem('inProgressRecipes', JSON.stringify(parseRecipesInProgress));\n    }\n  }, []);\n\n  useEffect(() => {\n    setHeartIcon(setRecipeToFavorite, id);\n  }, []);\n\n  useEffect(() => {\n    isButtonFinishDisabled(storedProgress, history, selectedDrink, setButtonToFinish);\n  }, [storedProgress]);\n\n  return (\n    <div className=\"inProgress-container-all\">\n      <div className=\"inProgress-container\">\n        <button\n          type=\"button\"\n          disabled\n          data-testid=\"recipe-category\"\n          id=\"category-in-progress\"\n          className=\"btn btns-recipe-details text-category btn-warning\"\n        >\n          { selectedDrink.strCategory }\n        </button>\n        <div className=\"photo-ingredients\">\n          <h1 data-testid=\"recipe-title\">{ selectedDrink.strDrink }</h1>\n          <img\n            className=\"recipe-photo\"\n            src={ selectedDrink.strDrinkThumb }\n            alt={ selectedDrink.strDrink }\n            data-testid=\"recipe-photo\"\n          />\n          <div className=\"ingredients-container\">\n            <div className=\"btns-container\">\n              <div\n                className=\"icon\"\n                data-testid=\"share-btn\"\n                onClick={ () => {\n                  const URL = history.location.pathname;\n                  onClipboardClicked(setClipboardState, URL);\n                } }\n              >\n                <img className=\"share-icon\" src={ shareIcon } alt=\"share\" />\n              </div>\n              {clipboardState ? 'Link copiado!' : ''}\n              <div\n                className=\"icon\"\n                data-testid=\"favorite-btn\"\n                src={ isRecipeFavorite ? 'blackHeartIcon' : 'whiteHeartIcon' }\n                onClick={ () => {\n                  saveFavoriteRecipeOnStorage(selectedDrink, 'bebida');\n                  setRecipeToFavorite(!isRecipeFavorite);\n                } }\n              >\n                {isRecipeFavorite ? (\n                  <img className=\"favorite-icon\" src={ blackHeartIcon } alt=\"desfavoritar\" />\n                )\n                  : (<img className=\"favorite-icon\" src={ whiteHeartIcon } alt=\"favoritar\" />) }\n              </div>\n            </div>\n            <h3 id=\"ingredients-h3\">Ingredientes</h3>\n            <div className=\"ingredients-list\">\n              {\n                arrayOfIngredientsAndMeasurements(selectedDrink).map((ingredient, index) => (\n                  <div\n                    key={ index }\n                    data-testid={ `${index}-ingredient-step` }\n                    className=\"ingredient-step\"\n                  >\n                    <label\n                      htmlFor={ ingredient[0] }\n                      style={ { overflow: 'hidden' } }\n                    >\n                      <input\n                        type=\"checkbox\"\n                        checked={ getProgressStored(ingredient, id, storedProgress, 'cocktails') }\n                        id={ ingredient[0] }\n                        name={ ingredient[0] }\n                        onChange={ ({ target }) => {\n                          getInProgressStoraged('cocktails', id, target.name);\n                          const getStoredProgress = localStorage.getItem('inProgressRecipes');\n                          const parseStored = JSON.parse(getStoredProgress);\n                          setStoredProgress(parseStored);\n                        } }\n                      />\n                    &nbsp;\n                      <span className=\"ingredient-span\">\n                        {`${ingredient[0]} - ${ingredient[1]}`}\n                      </span>\n                    </label>\n                  </div>\n                ))\n              }\n            </div>\n          </div>\n        </div>\n        <div className=\"instructions-container\">\n          <h3>Instructions</h3>\n          <p data-testid=\"instructions\">{selectedDrink.strInstructions}</p>\n        </div>\n        <button\n          className=\"btn btns-recipe-details btn-make-recipe btn-danger in-progress-finish-recipe\"\n          data-testid=\"finish-recipe-btn\"\n          type=\"button\"\n          disabled={ isFinishButtonEnabled }\n          onClick={ () => {\n            history.push('/receitas-feitas');\n            saveDoneRecipeOnStorage(selectedDrink, 'bebida');\n          } }\n        >\n          Finalizar Receita\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default DrinksInProgress;\n","/* eslint-disable no-restricted-globals */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState, useEffect } from 'react';\nimport { fetchDrinks } from '../services/helpers';\nimport '../styles/carousel.css';\n\nconst MAX_DRINKS = 23;\n\nfunction DrinkCarousel() {\n  const [drinks, setDrinks] = useState([]);\n  const [img1, setImg1] = useState(0);\n\n  const requestAPI = async () => {\n    const responseAPI = await fetchDrinks();\n    const filteredDrinks = responseAPI.drinks\n      .filter((drink, index) => index <= MAX_DRINKS && drink);\n    setDrinks(filteredDrinks);\n  };\n\n  useEffect(() => {\n    requestAPI();\n  }, []);\n\n  const carouselLogic = (name) => {\n    const TWO = 2;\n    const onClickButtonPrevious = (img1 - TWO);\n    const onClickButtonNext = (img1 + TWO);\n    const maxLength = drinks.length;\n    if (name === 'next') {\n      if (onClickButtonNext === maxLength) {\n        return setImg1(0);\n      }\n      return setImg1(onClickButtonNext);\n    }\n    if (name === 'previous') {\n      const MINUS_TWO = -2;\n      const LAST_POSITION = 22;\n      if (img1 + MINUS_TWO === MINUS_TWO) {\n        return setImg1(LAST_POSITION);\n      }\n      return setImg1(onClickButtonPrevious);\n    }\n  };\n\n  return (\n    <div className=\"carousel-container\">\n      <button\n        className=\"btn btn-previous\"\n        type=\"button\"\n        name=\"previous\"\n        onClick={ ({ target }) => carouselLogic(target.name) }\n      >\n        {'<'}\n      </button>\n      <div className=\"carousel-img-container\">\n        {drinks.map((drink, index) => {\n          if (index === img1 || index === img1 + 1) {\n            return (\n              <img\n                className=\"img-display-view\"\n                key={ index }\n                style={ { height: '50px', width: '50px' } }\n                src={ drink.strDrinkThumb }\n                name={ drink.idDrink }\n                alt=\"Drink\"\n                data-testid={ `${index}-recomendation-card` }\n              />\n            );\n          }\n          return (\n            <img\n              className=\"img-display-none\"\n              key={ index }\n              style={ { height: '50px', width: '50px' } }\n              src={ drink.strDrinkThumb }\n              name={ drink.idDrink }\n              alt=\"Drink\"\n              data-testid={ `${index}-recomendation-card` }\n              onClick={ () => history.push(`/bebidas/${drink.idDrink}`) }\n            />\n          );\n        })}\n      </div>\n      <button\n        className=\"btn btn-next\"\n        type=\"button\"\n        name=\"next\"\n        onClick={ ({ target }) => carouselLogic(target.name) }\n      >\n        {'>'}\n      </button>\n    </div>\n  );\n}\n\nexport default DrinkCarousel;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport ReactPlayer from 'react-player';\nimport ApplicationContext from '../context/ApplicationContext';\nimport { fetchMealId, arrayOfIngredientsAndMeasurements } from '../services/helpers';\nimport {\n  checkIfThereIsLocalStorage,\n  onClipboardClicked,\n  saveFavoriteRecipeOnStorage,\n  setHeartIcon } from '../services/supportFunctions';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\nimport unavailableVideo from '../images/unavailableVideo.png';\nimport DrinkCarousel from '../components/DrinkCarousel';\nimport Footer from '../components/Footer';\nimport '../styles/recipeDetails.css';\n\nfunction ScreenMealDetails() {\n  const { id } = useParams();\n  const history = useHistory();\n  const {\n    selectedMeal,\n    setSelectedMeal,\n    clipboardState,\n    setClipboardState,\n    hasStartButton,\n    setStartButton,\n    alreadyStarted,\n    setRecipeStarted,\n  } = useContext(ApplicationContext);\n  const [isRecipeFavorite, setRecipeToFavorite] = useState(false);\n\n  const searchId = async () => {\n    const responseAPI = await fetchMealId(id);\n    setSelectedMeal(responseAPI.meals[0]);\n    localStorage.setItem('currentMeal', JSON.stringify(responseAPI.meals[0]));\n  };\n\n  useEffect(() => {\n    searchId();\n  }, []);\n\n  useEffect(() => {\n    if (checkIfThereIsLocalStorage('doneRecipes')) {\n      const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n      const recipeAlreadyMade = doneRecipes.some((recipe) => recipe.id === id);\n      setStartButton(!recipeAlreadyMade);\n    }\n    if (checkIfThereIsLocalStorage('inProgressRecipes')) {\n      const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      const recipeStarted = Object.keys(inProgressRecipes.meals)\n        .some((recipeID) => recipeID === id);\n      setRecipeStarted(recipeStarted);\n    }\n  }, []);\n\n  useEffect(() => {\n    setHeartIcon(setRecipeToFavorite, id);\n  }, []);\n\n  return (\n    <div className=\"div-details-container\">\n      {/* <h3 className=\"page-title\">Recipe Details</h3> */}\n      <div className=\"container-group\">\n        <div className=\"img-ingredients-container\">\n          <div className=\"title-ingredients-container\">\n            <h1\n              className=\"recipe-title\"\n              data-testid=\"recipe-title\"\n            >\n              { selectedMeal.strMeal }\n            </h1>\n            <h2 id=\"ingredients\">Ingredients:</h2>\n            <ul className=\"ul\">\n              {\n                arrayOfIngredientsAndMeasurements(selectedMeal).map((e, index) => (\n                  <li\n                    key={ index }\n                    data-testid={ `${index}-ingredient-name-and-measure` }\n                  >\n                    {`${e[0]} - ${e[1]}`}\n                  </li>\n                ))\n              }\n            </ul>\n          </div>\n          <div className=\"img-container\">\n            <img\n              className=\"recipe-img\"\n              src={ selectedMeal.strMealThumb }\n              alt={ selectedMeal.strMealThumb }\n              data-testid=\"recipe-photo\"\n            />\n          </div>\n        </div>\n        <div className=\"btns-container\">\n          <div\n            className=\"icon\"\n            data-testid=\"share-btn\"\n            onClick={ () => {\n              const URL = history.location.pathname;\n              onClipboardClicked(setClipboardState, URL);\n            } }\n          >\n            {clipboardState\n              ? <p>Link Copied to Clipboard!</p>\n              : (\n                <img className=\"share-icon\" src={ shareIcon } alt=\"share\" />\n              )}\n          </div>\n          <div\n            className=\"icon\"\n            data-testid=\"favorite-btn\"\n            src={ isRecipeFavorite ? 'blackHeartIcon' : 'whiteHeartIcon' }\n            onClick={ () => {\n              saveFavoriteRecipeOnStorage(selectedMeal, 'comida');\n              setRecipeToFavorite(!isRecipeFavorite);\n            } }\n          >\n            {isRecipeFavorite ? (\n              <img className=\"favorite-icon\" src={ blackHeartIcon } alt=\"unfavorite\" />\n            )\n              : (\n                <img\n                  className=\"favorite-icon\"\n                  src={ whiteHeartIcon }\n                  alt=\"favorite\"\n                />) }\n          </div>\n        </div>\n        <div className=\"content-container\">\n          <button\n            data-testid=\"recipe-category\"\n            type=\"button\"\n            disabled\n            className=\"btn btns-recipe-details text-category btn-warning\"\n          >\n            { `Category ${selectedMeal.strCategory}` }\n          </button>\n          <div>\n            <h3>Instructions: </h3>\n            <p data-testid=\"instructions\">{selectedMeal.strInstructions}</p>\n          </div>\n          <div className=\"video-container\">\n            {!selectedMeal.strYoutube\n              ? (\n                <img\n                  className=\"video-img\"\n                  src={ unavailableVideo }\n                  alt=\"Video unavailable\"\n                />\n              )\n              : (\n                <ReactPlayer\n                  data-testid=\"video\"\n                  url={ selectedMeal.strYoutube }\n                />)}\n          </div>\n          <div className=\"recomended-drinks-title\">\n            <h2\n              className=\"recommended-drinks\"\n            >\n              Recommended Drinks\n            </h2>\n          </div>\n          <DrinkCarousel />\n          <div className=\"btn-make-recipe-container\">\n            { hasStartButton ? (\n              <button\n                data-testid=\"start-recipe-btn\"\n                className=\"btn btns-recipe-details btn-make-recipe btn-danger\"\n                type=\"button\"\n                onClick={ () => history.push(`/comidas/${id}/in-progress`) }\n              >\n                {alreadyStarted ? 'Continue Recipe' : 'Start Recipe'}\n              </button>\n            ) : null }\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ScreenMealDetails;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n// eslint-disable-next-line jsx-a11y/click-events-have-key-events\nimport React, { useState, useEffect } from 'react';\nimport { Carousel } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { fetchMeals } from '../services/helpers';\nimport '../styles/carousel.css';\n\nconst MAX_MEALS = 23;\n\nfunction MealCarousel() {\n  const [meals, setMeals] = useState([]);\n  const history = useHistory();\n\n  const requestAPI = async () => {\n    const responseAPI = await fetchMeals();\n    const filteredDrinks = responseAPI.meals\n      .filter((meal, index) => index <= MAX_MEALS && meal);\n    setMeals(filteredDrinks);\n  };\n\n  useEffect(() => {\n    requestAPI();\n  }, []);\n\n  return (\n    <div className=\"carousel-container-all\">\n      <Carousel>\n        {meals.map((meal, index) => (\n          <Carousel.Item key={ index }>\n            <img\n              className=\"d-block w-100 img-carousel\"\n              src={ meal.strMealThumb }\n              alt=\"Meal\"\n              datat-testid={ `${index}-recomendation-card` }\n              onClick={ () => history.push(`/comidas/${meal.idMeal}`) }\n            />\n          </Carousel.Item>\n        ))}\n      </Carousel>\n    </div>\n  );\n}\n\nexport default MealCarousel;\n","/* eslint-disable react/jsx-max-depth */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useContext, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport ReactPlayer from 'react-player';\nimport { fetchDrinkId, arrayOfIngredientsAndMeasurements } from '../services/helpers';\nimport {\n  onClipboardClicked,\n  checkIfThereIsLocalStorage,\n  saveFavoriteRecipeOnStorage,\n  setHeartIcon } from '../services/supportFunctions';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport unavailableVideo from '../images/unavailableVideo.png';\nimport ApplicationContext from '../context/ApplicationContext';\nimport '../App.css';\nimport MealCarousel from '../components/MealCarousel';\nimport '../styles/recipeDetails.css';\nimport Footer from '../components/Footer';\n\nfunction ScreenDrinkDetails() {\n  const history = useHistory();\n  const {\n    selectedDrink,\n    setSelectedDrink,\n    clipboardState,\n    setClipboardState,\n    hasStartButton,\n    setStartButton,\n    alreadyStarted,\n    setRecipeStarted,\n  } = useContext(ApplicationContext);\n  const { id } = useParams();\n  const [isRecipeFavorite, setRecipeToFavorite] = useState(false);\n\n  const searchId = async () => {\n    const responseAPI = await fetchDrinkId(id);\n    setSelectedDrink(responseAPI.drinks[0]);\n    localStorage.setItem('currentDrink', JSON.stringify(responseAPI.drinks[0]));\n  };\n\n  useEffect(() => {\n    searchId();\n  }, []);\n\n  useEffect(() => {\n    if (checkIfThereIsLocalStorage('doneRecipes')) {\n      const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n      const recipeAlreadyMade = doneRecipes.some((recipe) => recipe.id === id);\n      setStartButton(!recipeAlreadyMade);\n    }\n    if (checkIfThereIsLocalStorage('inProgressRecipes')) {\n      const inProgressRecipes = JSON.parse(localStorage.getItem('inProgressRecipes'));\n      const recipeStarted = Object.keys(inProgressRecipes.cocktails)\n        .some((recipeID) => recipeID === id);\n      setRecipeStarted(recipeStarted);\n    }\n  });\n\n  useEffect(() => {\n    setHeartIcon(setRecipeToFavorite, id);\n  }, []);\n\n  return (\n    <div className=\"div-details-container\">\n      {/* <h3 className=\"page-title\">Recipe Details</h3> */}\n      <div className=\"container-group\">\n        <div className=\"img-ingredients-container\">\n          <div className=\"title-ingredients-container\">\n            <h1\n              className=\"recipe-title\"\n              data-testid=\"recipe-title\"\n            >\n              { selectedDrink.strDrink }\n            </h1>\n            <h2 id=\"ingredients\">Ingredients:</h2>\n            <ul className=\"ul\">\n              {\n                arrayOfIngredientsAndMeasurements(selectedDrink).map((e, index) => (\n                  <li\n                    key={ index }\n                    data-testid={ `${index}-ingredient-name-and-measure` }\n                  >\n                    {`${e[0]} - ${e[1]}`}\n                  </li>\n                ))\n              }\n            </ul>\n          </div>\n          <div className=\"img-container\">\n            <img\n              className=\"recipe-img\"\n              src={ selectedDrink.strDrinkThumb }\n              alt={ selectedDrink.srtDrink }\n              data-testid=\"recipe-photo\"\n            />\n          </div>\n        </div>\n        <div className=\"btns-container\">\n          <div\n            className=\"icon\"\n            data-testid=\"share-btn\"\n            onClick={ () => {\n              const URL = history.location.pathname;\n              onClipboardClicked(setClipboardState, URL);\n            } }\n          >\n            {clipboardState\n              ? <p>Link Copied to Clipboard!</p>\n              : (\n                <img className=\"share-icon\" src={ shareIcon } alt=\"share\" />\n              )}\n          </div>\n          <div\n            className=\"icon\"\n            data-testid=\"favorite-btn\"\n            src={ isRecipeFavorite ? 'blackHeartIcon' : 'whiteHeartIcon' }\n            onClick={ () => {\n              saveFavoriteRecipeOnStorage(selectedDrink, 'bebida');\n              setRecipeToFavorite(!isRecipeFavorite);\n            } }\n          >\n            {isRecipeFavorite ? (\n              <img className=\"favorite-icon\" src={ blackHeartIcon } alt=\"unfavorite\" />\n            )\n              : (\n                <img\n                  className=\"favorite-icon\"\n                  src={ whiteHeartIcon }\n                  alt=\"favorite\"\n                />) }\n          </div>\n        </div>\n        <div className=\"content-container\">\n          <button\n            data-testid=\"recipe-category\"\n            type=\"button\"\n            disabled\n            // className=\"btn btn-primary\"\n            className=\"btn btns-recipe-details text-category btn-warning\"\n          >\n            { `Category ${selectedDrink.strCategory} - ${selectedDrink.strAlcoholic}` }\n          </button>\n          <div>\n            <h3>Instructions: </h3>\n            <p data-testid=\"instructions\">{selectedDrink.strInstructions}</p>\n          </div>\n          <div className=\"video-container\">\n            {!selectedDrink.strYoutube\n              ? (\n                <img\n                  className=\"video-img\"\n                  src={ unavailableVideo }\n                  alt=\"Video unavailable\"\n                />\n              )\n              : (\n                <ReactPlayer\n                  data-testid=\"video\"\n                  url={ selectedDrink.strYoutube }\n                />)}\n          </div>\n          <div className=\"recomended-drinks-title\">\n            <h2\n              className=\"recomended-drinks\"\n            >\n              Recommended Meals\n            </h2>\n          </div>\n          <MealCarousel />\n          <div className=\"btn-make-recipe-container\">\n            { hasStartButton ? (\n              <button\n                data-testid=\"start-recipe-btn\"\n                className=\"btn btns-recipe-details btn-make-recipe btn-danger\"\n                type=\"button\"\n                onClick={ () => history.push(`/bebidas/${id}/in-progress`) }\n              >\n                {alreadyStarted ? 'Continue Recipe' : 'Start Recipe'}\n              </button>\n            ) : null }\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default ScreenDrinkDetails;\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport RecipesMainScreen from './pages/RecipesMainScreen';\nimport Profile from './pages/Profile';\nimport DrinksMainScreen from './pages/DrinksMainScreen';\nimport ExploreRecipies from './pages/ExploreRecipies';\nimport ExploreDrinks from './pages/ExploreDrinks';\nimport ExploreMealsIngredients from './pages/ExploreMealsIngredients';\nimport ExploreDrinksIngredients from './pages/ExploreDrinksIngredients';\nimport RecipesDone from './pages/RecipesDone';\nimport FavoriteRecipes from './pages/FavoriteRecipes';\nimport ExploreRecipesByArea from './pages/ExploreRecipesByArea';\nimport Explore from './pages/Explore';\nimport ApplicationProvider from './context/provider/ApplicationProvider';\nimport NotFound from './pages/NotFound';\nimport MealsInProgress from './pages/MealsInProgress';\nimport DrinksInProgress from './pages/DrinksInProgress';\nimport ScreenMealDetails from './pages/ScreenMealDetails';\nimport ScreenDrinkDetails from './pages/ScreenDrinkDetails';\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <ApplicationProvider>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={ Login } />\n            <Route exact path=\"/comidas\" component={ RecipesMainScreen } />\n            <Route exact path=\"/bebidas\" component={ DrinksMainScreen } />\n            <Route exact path=\"/comidas/:id\" component={ ScreenMealDetails } />\n            <Route exact path=\"/bebidas/:id\" component={ ScreenDrinkDetails } />\n            <Route exact path=\"/comidas/:id/in-progress\" component={ MealsInProgress } />\n            <Route exact path=\"/bebidas/:id/in-progress\" component={ DrinksInProgress } />\n            <Route exact path=\"/explorar\" component={ Explore } />\n            <Route exact path=\"/explorar/comidas\" component={ ExploreRecipies } />\n            <Route exact path=\"/explorar/bebidas\" component={ ExploreDrinks } />\n            <Route\n              exact\n              path=\"/explorar/comidas/ingredientes\"\n              component={ ExploreMealsIngredients }\n            />\n            <Route\n              exact\n              path=\"/explorar/bebidas/ingredientes\"\n              component={ ExploreDrinksIngredients }\n            />\n            <Route\n              exact\n              path=\"/explorar/comidas/area\"\n              component={ ExploreRecipesByArea }\n            />\n            <Route exact path=\"/perfil\" component={ Profile } />\n            <Route exact path=\"/receitas-feitas\" component={ RecipesDone } />\n            <Route exact path=\"/receitas-favoritas\" component={ FavoriteRecipes } />\n            <Route path=\"*\" component={ NotFound } />\n          </Switch>\n        </BrowserRouter>\n      </ApplicationProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}